[{"/home/holo/Desktop/rsm/kizuna/ui/src/index.tsx":"1","/home/holo/Desktop/rsm/kizuna/ui/src/app/index.tsx":"2","/home/holo/Desktop/rsm/kizuna/ui/src/containers/index.tsx":"3","/home/holo/Desktop/rsm/kizuna/ui/src/containers/ErrorHandlerContainer.tsx":"4","/home/holo/Desktop/rsm/kizuna/ui/src/containers/IntlContainer.tsx":"5","/home/holo/Desktop/rsm/kizuna/ui/src/containers/IonicContainer.tsx":"6","/home/holo/Desktop/rsm/kizuna/ui/src/containers/ReduxContainer.tsx":"7","/home/holo/Desktop/rsm/kizuna/ui/src/containers/RouterContainer.tsx":"8","/home/holo/Desktop/rsm/kizuna/ui/src/app/Auth/index.tsx":"9","/home/holo/Desktop/rsm/kizuna/ui/src/containers/ToastContainer/index.tsx":"10","/home/holo/Desktop/rsm/kizuna/ui/src/containers/ToastContainer/context.ts":"11","/home/holo/Desktop/rsm/kizuna/ui/src/redux/store.ts":"12","/home/holo/Desktop/rsm/kizuna/ui/src/redux/error/actions.ts":"13","/home/holo/Desktop/rsm/kizuna/ui/src/utils/services/ReduxService.ts":"14","/home/holo/Desktop/rsm/kizuna/ui/src/lang/index.ts":"15","/home/holo/Desktop/rsm/kizuna/ui/src/redux/reducers.ts":"16","/home/holo/Desktop/rsm/kizuna/ui/src/redux/error/types.ts":"17","/home/holo/Desktop/rsm/kizuna/ui/src/redux/language/actions/index.ts":"18","/home/holo/Desktop/rsm/kizuna/ui/src/app/LanguageSelector/index.tsx":"19","/home/holo/Desktop/rsm/kizuna/ui/src/redux/language/reducer.ts":"20","/home/holo/Desktop/rsm/kizuna/ui/src/redux/error/reducer.ts":"21","/home/holo/Desktop/rsm/kizuna/ui/src/utils/services/HolochainService/index.ts":"22","/home/holo/Desktop/rsm/kizuna/ui/src/redux/profile/reducer.ts":"23","/home/holo/Desktop/rsm/kizuna/ui/src/redux/profile/actions/index.ts":"24","/home/holo/Desktop/rsm/kizuna/ui/src/redux/language/actions/getLanguage.ts":"25","/home/holo/Desktop/rsm/kizuna/ui/src/redux/language/actions/setLanguage.ts":"26","/home/holo/Desktop/rsm/kizuna/ui/src/redux/contacts/reducer.ts":"27","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/reducer.ts":"28","/home/holo/Desktop/rsm/kizuna/ui/src/redux/preference/reducer.ts":"29","/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/reducer.ts":"30","/home/holo/Desktop/rsm/kizuna/ui/src/redux/gif/reducer.ts":"31","/home/holo/Desktop/rsm/kizuna/ui/src/app/Authenticated/index.tsx":"32","/home/holo/Desktop/rsm/kizuna/ui/src/app/Unauthenticated/index.tsx":"33","/home/holo/Desktop/rsm/kizuna/ui/src/components/Spinner/index.tsx":"34","/home/holo/Desktop/rsm/kizuna/ui/src/redux/language/types.ts":"35","/home/holo/Desktop/rsm/kizuna/ui/src/redux/profile/actions/createProfile.ts":"36","/home/holo/Desktop/rsm/kizuna/ui/src/redux/profile/actions/getAgentId.ts":"37","/home/holo/Desktop/rsm/kizuna/ui/src/redux/profile/actions/getMyProfile.ts":"38","/home/holo/Desktop/rsm/kizuna/ui/src/redux/profile/types.ts":"39","/home/holo/Desktop/rsm/kizuna/ui/src/redux/profile/actions/searchProfiles.ts":"40","/home/holo/Desktop/rsm/kizuna/ui/src/redux/profile/actions/logout.ts":"41","/home/holo/Desktop/rsm/kizuna/ui/src/redux/contacts/types.ts":"42","/home/holo/Desktop/rsm/kizuna/ui/src/redux/preference/types.ts":"43","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/types.ts":"44","/home/holo/Desktop/rsm/kizuna/ui/src/redux/gif/types.ts":"45","/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/types.ts":"46","/home/holo/Desktop/rsm/kizuna/ui/src/redux/signal/actions.ts":"47","/home/holo/Desktop/rsm/kizuna/ui/src/redux/commons/actions.ts":"48","/home/holo/Desktop/rsm/kizuna/ui/src/utils/services/HolochainService/types.ts":"49","/home/holo/Desktop/rsm/kizuna/ui/src/utils/services/ConversionService.ts":"50","/home/holo/Desktop/rsm/kizuna/ui/src/utils/services/DateService.ts":"51","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/signals/pinMessageData.ts":"52","/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/setMessages.ts":"53","/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/signals/recommitMessage.ts":"54","/home/holo/Desktop/rsm/kizuna/ui/src/components/Menu/index.tsx":"55","/home/holo/Desktop/rsm/kizuna/ui/src/app/Chat/index.tsx":"56","/home/holo/Desktop/rsm/kizuna/ui/src/app/Blocked/index.tsx":"57","/home/holo/Desktop/rsm/kizuna/ui/src/app/Home/index.tsx":"58","/home/holo/Desktop/rsm/kizuna/ui/src/app/GroupChat/index.tsx":"59","/home/holo/Desktop/rsm/kizuna/ui/src/app/NewConversation/index.tsx":"60","/home/holo/Desktop/rsm/kizuna/ui/src/app/Settings/index.tsx":"61","/home/holo/Desktop/rsm/kizuna/ui/src/app/Profile/index.tsx":"62","/home/holo/Desktop/rsm/kizuna/ui/src/app/Landing/index.tsx":"63","/home/holo/Desktop/rsm/kizuna/ui/src/app/Login/index.tsx":"64","/home/holo/Desktop/rsm/kizuna/ui/src/app/Register/index.tsx":"65","/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/helpers/transformZomeDateToUIData.ts":"66","/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/signals/typingP2P.ts":"67","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/signals/groupTypingDetail.ts":"68","/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/signals/receiveP2PReceipt.ts":"69","/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/signals/receiveP2PPin.ts":"70","/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/signals/receiveP2PMessage.ts":"71","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/signals/groupMessageRead.ts":"72","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/signals/groupMessageData.ts":"73","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/signals/addedToGroup.ts":"74","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/helpers/index.ts":"75","/home/holo/Desktop/rsm/kizuna/ui/src/utils/services/RegexService.ts":"76","/home/holo/Desktop/rsm/kizuna/ui/src/redux/profile/actions/updateAvatar.ts":"77","/home/holo/Desktop/rsm/kizuna/ui/src/app/NewConversation/context.ts":"78","/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/appendReceipt.ts":"79","/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/appendMessage.ts":"80","/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/sendMessage.ts":"81","/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/setErrMessage.ts":"82","/home/holo/Desktop/rsm/kizuna/ui/src/redux/commons/types.ts":"83","/home/holo/Desktop/rsm/kizuna/ui/src/app/GroupChat/GroupChatContent.tsx":"84","/home/holo/Desktop/rsm/kizuna/ui/src/app/Chat/ChatContent.tsx":"85","/home/holo/Desktop/rsm/kizuna/ui/src/components/UpdateAvatar/index.tsx":"86","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/index.ts":"87","/home/holo/Desktop/rsm/kizuna/ui/src/app/Profile/ProfileMenuItems/index.tsx":"88","/home/holo/Desktop/rsm/kizuna/ui/src/components/ImageCropper/index.tsx":"89","/home/holo/Desktop/rsm/kizuna/ui/src/components/Identicon/index.tsx":"90","/home/holo/Desktop/rsm/kizuna/ui/src/components/ProfileInfo/index.tsx":"91","/home/holo/Desktop/rsm/kizuna/ui/src/app/Settings/SettingsHeader/index.tsx":"92","/home/holo/Desktop/rsm/kizuna/ui/src/app/Settings/LanguageDropdown/index.tsx":"93","/home/holo/Desktop/rsm/kizuna/ui/src/app/Settings/Preference/index.tsx":"94","/home/holo/Desktop/rsm/kizuna/ui/src/components/Input/HomeInput/index.tsx":"95","/home/holo/Desktop/rsm/kizuna/ui/src/app/NewConversation/SelectedContactsHeader/index.tsx":"96","/home/holo/Desktop/rsm/kizuna/ui/src/app/NewConversation/NewConversationHeader/index.tsx":"97","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/fetchPinnedMessages.ts":"98","/home/holo/Desktop/rsm/kizuna/ui/src/app/NewConversation/ContactList/index.tsx":"99","/home/holo/Desktop/rsm/kizuna/ui/src/components/MessageInput/index.tsx":"100","/home/holo/Desktop/rsm/kizuna/ui/src/app/GroupChat/GroupSearch/index.tsx":"101","/home/holo/Desktop/rsm/kizuna/ui/src/app/GroupChat/GroupPinnedMessages/index.tsx":"102","/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/getFileBytes.ts":"103","/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/getPinnedMessages.ts":"104","/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/getPreviousMessages.ts":"105","/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/isTyping.ts":"106","/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/helpers/getP2PState.ts":"107","/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/readMessage.ts":"108","/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/removeErrMessage.ts":"109","/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/pinMessage.ts":"110","/home/holo/Desktop/rsm/kizuna/ui/src/app/GroupChat/GroupChatDetails/index.tsx":"111","/home/holo/Desktop/rsm/kizuna/ui/src/app/Conversations/index.tsx":"112","/home/holo/Desktop/rsm/kizuna/ui/src/app/Contacts/index.tsx":"113","/home/holo/Desktop/rsm/kizuna/ui/src/app/Blocked/EmptyBlocked/index.tsx":"114","/home/holo/Desktop/rsm/kizuna/ui/src/components/ContactList/index.tsx":"115","/home/holo/Desktop/rsm/kizuna/ui/src/app/Chat/ChatSearch/index.tsx":"116","/home/holo/Desktop/rsm/kizuna/ui/src/app/Chat/ChatPinnedMessages/index.tsx":"117","/home/holo/Desktop/rsm/kizuna/ui/src/app/Chat/ChatDetails/index.tsx":"118","/home/holo/Desktop/rsm/kizuna/ui/src/app/GroupChat/GroupChatHeader.tsx":"119","/home/holo/Desktop/rsm/kizuna/ui/src/app/Chat/ChatHeader.tsx":"120","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/getBadgeCount.ts":"121","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/addMembers.ts":"122","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/getAdjacentGroupMessages.ts":"123","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/getLatestGroupVersion.ts":"124","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/createGroup.ts":"125","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/getSubsequentGroupMessages.ts":"126","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/getMessagesByGroupByTimestamp.ts":"127","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/readGroupMessage.ts":"128","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/getPreviousGroupMessages.ts":"129","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/getMessagesWithProfile.ts":"130","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/indicateGroupTyping.ts":"131","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/sendInitialGroupMessage.ts":"132","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/removeMembers.ts":"133","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/setFilesBytes.ts":"134","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/sendGroupMessage.ts":"135","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/removeErrGroupMessage.ts":"136","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/setErrGroupMessage.ts":"137","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/updateGroupName.ts":"138","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/updateGroupAvatar.ts":"139","/home/holo/Desktop/rsm/kizuna/ui/src/components/ImageCropper/CropPopover.tsx":"140","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/fetchMembers.ts":"141","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/getPinnedMessages.ts":"142","/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/countUnread.ts":"143","/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/getMessagesByAgentByTimestamp.ts":"144","/home/holo/Desktop/rsm/kizuna/ui/src/app/NewConversation/ContactList/IndexSection.tsx":"145","/home/holo/Desktop/rsm/kizuna/ui/src/app/GroupChat/ChatBox/index.tsx":"146","/home/holo/Desktop/rsm/kizuna/ui/src/components/Chat/index.tsx":"147","/home/holo/Desktop/rsm/kizuna/ui/src/components/Chat/Typing/index.tsx":"148","/home/holo/Desktop/rsm/kizuna/ui/src/app/Contacts/AddContact/AddContactModal.tsx":"149","/home/holo/Desktop/rsm/kizuna/ui/src/app/Contacts/AddContact/AddContactFAB.tsx":"150","/home/holo/Desktop/rsm/kizuna/ui/src/redux/preference/actions/index.ts":"151","/home/holo/Desktop/rsm/kizuna/ui/src/app/Profile/ProfilePopover/index.tsx":"152","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/unpinMessage.ts":"153","/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/pinMessage.ts":"154","/home/holo/Desktop/rsm/kizuna/ui/src/components/MessageInput/EndButtons/index.tsx":"155","/home/holo/Desktop/rsm/kizuna/ui/src/components/EmojiPicker/index.tsx":"156","/home/holo/Desktop/rsm/kizuna/ui/src/components/MessageInput/ReplyView/index.tsx":"157","/home/holo/Desktop/rsm/kizuna/ui/src/components/Search/index.tsx":"158","/home/holo/Desktop/rsm/kizuna/ui/src/components/MessageInput/FileView/index.tsx":"159","/home/holo/Desktop/rsm/kizuna/ui/src/components/PinnedMessages/index.tsx":"160","/home/holo/Desktop/rsm/kizuna/ui/src/app/GroupChat/GroupChatDetails/UpdateGroupName/index.tsx":"161","/home/holo/Desktop/rsm/kizuna/ui/src/app/Conversations/EmptyConversations/index.tsx":"162","/home/holo/Desktop/rsm/kizuna/ui/src/app/Chat/ChatDetails/SegmentTabs/index.tsx":"163","/home/holo/Desktop/rsm/kizuna/ui/src/app/Chat/ChatDetails/ContactHeader/index.tsx":"164","/home/holo/Desktop/rsm/kizuna/ui/src/components/ContactList/IndexSection/index.tsx":"165","/home/holo/Desktop/rsm/kizuna/ui/src/components/Gif/GifKeyboard/index.tsx":"166","/home/holo/Desktop/rsm/kizuna/ui/src/components/Conversation/index.tsx":"167","/home/holo/Desktop/rsm/kizuna/ui/src/components/Toolbar/index.tsx":"168","/home/holo/Desktop/rsm/kizuna/ui/src/app/Contacts/EmptyContacts/index.tsx":"169","/home/holo/Desktop/rsm/kizuna/ui/src/app/GroupChat/GroupChatDetails/EndButtons/index.tsx":"170","/home/holo/Desktop/rsm/kizuna/ui/src/app/GroupChat/GroupChatDetails/SegmentTabs/index.tsx":"171","/home/holo/Desktop/rsm/kizuna/ui/src/app/GroupChat/GroupChatDetails/Members/index.tsx":"172","/home/holo/Desktop/rsm/kizuna/ui/src/components/Slides/FileBox/index.tsx":"173","/home/holo/Desktop/rsm/kizuna/ui/src/components/Slides/MediaBox/index.tsx":"174","/home/holo/Desktop/rsm/kizuna/ui/src/app/NewConversation/ContactList/ContactItem.tsx":"175","/home/holo/Desktop/rsm/kizuna/ui/src/components/AgentIdentifier/index.tsx":"176","/home/holo/Desktop/rsm/kizuna/ui/src/app/Contacts/AddContact/AddContactIndex.tsx":"177","/home/holo/Desktop/rsm/kizuna/ui/src/app/Contacts/AddContact/AddContactHeader.tsx":"178","/home/holo/Desktop/rsm/kizuna/ui/src/redux/preference/actions/setPreference.ts":"179","/home/holo/Desktop/rsm/kizuna/ui/src/redux/preference/actions/fetchPreference.ts":"180","/home/holo/Desktop/rsm/kizuna/ui/src/redux/gif/actions/getCategories.ts":"181","/home/holo/Desktop/rsm/kizuna/ui/src/redux/gif/actions/getGifsState.ts":"182","/home/holo/Desktop/rsm/kizuna/ui/src/redux/gif/actions/getGifs.ts":"183","/home/holo/Desktop/rsm/kizuna/ui/src/components/Chat/ChatList/index.tsx":"184","/home/holo/Desktop/rsm/kizuna/ui/src/components/Chat/Me/index.tsx":"185","/home/holo/Desktop/rsm/kizuna/ui/src/components/Chat/Others/index.tsx":"186","/home/holo/Desktop/rsm/kizuna/ui/src/components/Chat/File/ImageView/index.tsx":"187","/home/holo/Desktop/rsm/kizuna/ui/src/app/Contacts/AddContact/AddContactItem.tsx":"188","/home/holo/Desktop/rsm/kizuna/ui/src/redux/contacts/actions/index.ts":"189","/home/holo/Desktop/rsm/kizuna/ui/src/redux/gif/actions/setGifs.ts":"190","/home/holo/Desktop/rsm/kizuna/ui/src/redux/gif/actions/setCategories.ts":"191","/home/holo/Desktop/rsm/kizuna/ui/src/components/DatePicker/index.tsx":"192","/home/holo/Desktop/rsm/kizuna/ui/src/components/VideoPlayer/index.tsx":"193","/home/holo/Desktop/rsm/kizuna/ui/src/utils/services/EventService.ts":"194","/home/holo/Desktop/rsm/kizuna/ui/src/components/ContactList/ContactItem/index.tsx":"195","/home/holo/Desktop/rsm/kizuna/ui/src/app/GroupChat/GroupChatDetails/Members/AddMemberModal/index.tsx":"196","/home/holo/Desktop/rsm/kizuna/ui/src/components/Chat/File/FileView/index.tsx":"197","/home/holo/Desktop/rsm/kizuna/ui/src/redux/contacts/actions/blockContact.ts":"198","/home/holo/Desktop/rsm/kizuna/ui/src/redux/contacts/actions/addContact.ts":"199","/home/holo/Desktop/rsm/kizuna/ui/src/redux/contacts/actions/removeContact.ts":"200","/home/holo/Desktop/rsm/kizuna/ui/src/redux/contacts/actions/fetchBlocked.ts":"201","/home/holo/Desktop/rsm/kizuna/ui/src/redux/contacts/actions/setContacts.ts":"202","/home/holo/Desktop/rsm/kizuna/ui/src/redux/contacts/actions/fetchMyContacts.ts":"203","/home/holo/Desktop/rsm/kizuna/ui/src/redux/contacts/actions/unblockContact.ts":"204","/home/holo/Desktop/rsm/kizuna/ui/src/components/Chat/File/index.tsx":"205","/home/holo/Desktop/rsm/kizuna/ui/src/components/Chat/ReplyTo/index.tsx":"206","/home/holo/Desktop/rsm/kizuna/ui/src/components/Chat/Text/index.tsx":"207","/home/holo/Desktop/rsm/kizuna/ui/src/components/Chat/ChatPopover/index.tsx":"208","/home/holo/Desktop/rsm/kizuna/ui/src/components/Chat/MessageTimestamp/index.tsx":"209","/home/holo/Desktop/rsm/kizuna/ui/src/components/Chat/File/ImageView/ImageModal/index.tsx":"210","/home/holo/Desktop/rsm/kizuna/ui/src/components/VideoPlayer/Controls/index.tsx":"211","/home/holo/Desktop/rsm/kizuna/ui/src/components/VideoPlayer/VideoPlayerModal/index.tsx":"212","/home/holo/Desktop/rsm/kizuna/ui/src/app/GroupChat/GroupChatDetails/Members/AddMemberModal/AddMemberHeader/index.tsx":"213","/home/holo/Desktop/rsm/kizuna/ui/src/app/GroupChat/GroupChatDetails/Members/AddMemberModal/AddMemberIndex/index.tsx":"214","/home/holo/Desktop/rsm/kizuna/ui/src/components/Chat/File/VideoView/index.tsx":"215","/home/holo/Desktop/rsm/kizuna/ui/src/app/GroupChat/GroupChatDetails/Members/AddMemberModal/AddMemberItem/index.tsx":"216"},{"size":456,"mtime":1633605584043,"results":"217","hashOfConfig":"218"},{"size":820,"mtime":1633605584035,"results":"219","hashOfConfig":"218"},{"size":718,"mtime":1635918715851,"results":"220","hashOfConfig":"218"},{"size":1112,"mtime":1646744157657,"results":"221","hashOfConfig":"218"},{"size":992,"mtime":1646744157657,"results":"222","hashOfConfig":"218"},{"size":179,"mtime":1633605584043,"results":"223","hashOfConfig":"218"},{"size":347,"mtime":1633605584043,"results":"224","hashOfConfig":"218"},{"size":218,"mtime":1637126070348,"results":"225","hashOfConfig":"218"},{"size":1406,"mtime":1646744157633,"results":"226","hashOfConfig":"218"},{"size":2091,"mtime":1633605584043,"results":"227","hashOfConfig":"218"},{"size":401,"mtime":1633605584043,"results":"228","hashOfConfig":"218"},{"size":583,"mtime":1652200840448,"results":"229","hashOfConfig":"218"},{"size":707,"mtime":1633605584047,"results":"230","hashOfConfig":"218"},{"size":236,"mtime":1646744157673,"results":"231","hashOfConfig":"218"},{"size":136,"mtime":1633605584043,"results":"232","hashOfConfig":"218"},{"size":718,"mtime":1649615560176,"results":"233","hashOfConfig":"218"},{"size":639,"mtime":1633605584047,"results":"234","hashOfConfig":"218"},{"size":120,"mtime":1633605584047,"results":"235","hashOfConfig":"218"},{"size":1398,"mtime":1646744157645,"results":"236","hashOfConfig":"218"},{"size":458,"mtime":1633605584047,"results":"237","hashOfConfig":"218"},{"size":488,"mtime":1633605584047,"results":"238","hashOfConfig":"218"},{"size":8478,"mtime":1655970323357,"results":"239","hashOfConfig":"218"},{"size":670,"mtime":1640137341182,"results":"240","hashOfConfig":"218"},{"size":282,"mtime":1640137341182,"results":"241","hashOfConfig":"218"},{"size":706,"mtime":1633605584047,"results":"242","hashOfConfig":"218"},{"size":387,"mtime":1633605584047,"results":"243","hashOfConfig":"218"},{"size":484,"mtime":1633605584047,"results":"244","hashOfConfig":"218"},{"size":2714,"mtime":1643366884642,"results":"245","hashOfConfig":"218"},{"size":531,"mtime":1633605584051,"results":"246","hashOfConfig":"218"},{"size":3442,"mtime":1652200840444,"results":"247","hashOfConfig":"218"},{"size":384,"mtime":1637906940499,"results":"248","hashOfConfig":"218"},{"size":1720,"mtime":1646744157633,"results":"249","hashOfConfig":"218"},{"size":478,"mtime":1633605584035,"results":"250","hashOfConfig":"218"},{"size":258,"mtime":1633605584043,"results":"251","hashOfConfig":"218"},{"size":353,"mtime":1633605584047,"results":"252","hashOfConfig":"218"},{"size":1453,"mtime":1654847144078,"results":"253","hashOfConfig":"218"},{"size":186,"mtime":1649615560172,"results":"254","hashOfConfig":"218"},{"size":1213,"mtime":1654847119998,"results":"255","hashOfConfig":"218"},{"size":914,"mtime":1646211599640,"results":"256","hashOfConfig":"218"},{"size":1559,"mtime":1649615560176,"results":"257","hashOfConfig":"218"},{"size":293,"mtime":1647941606755,"results":"258","hashOfConfig":"218"},{"size":1144,"mtime":1649615560168,"results":"259","hashOfConfig":"218"},{"size":633,"mtime":1633605584051,"results":"260","hashOfConfig":"218"},{"size":9269,"mtime":1643366884642,"results":"261","hashOfConfig":"218"},{"size":1663,"mtime":1637906940499,"results":"262","hashOfConfig":"218"},{"size":5179,"mtime":1652200840444,"results":"263","hashOfConfig":"218"},{"size":2232,"mtime":1646744157673,"results":"264","hashOfConfig":"218"},{"size":6061,"mtime":1654849778711,"results":"265","hashOfConfig":"218"},{"size":3966,"mtime":1652200840448,"results":"266","hashOfConfig":"218"},{"size":2637,"mtime":1649615560180,"results":"267","hashOfConfig":"218"},{"size":2636,"mtime":1646744157673,"results":"268","hashOfConfig":"218"},{"size":1279,"mtime":1637126070348,"results":"269","hashOfConfig":"218"},{"size":1124,"mtime":1649390581886,"results":"270","hashOfConfig":"218"},{"size":776,"mtime":1646744157669,"results":"271","hashOfConfig":"218"},{"size":4152,"mtime":1654534591782,"results":"272","hashOfConfig":"218"},{"size":630,"mtime":1633605584023,"results":"273","hashOfConfig":"218"},{"size":1390,"mtime":1646744157637,"results":"274","hashOfConfig":"218"},{"size":1292,"mtime":1634268748566,"results":"275","hashOfConfig":"218"},{"size":727,"mtime":1633605584027,"results":"276","hashOfConfig":"218"},{"size":8189,"mtime":1652200860844,"results":"277","hashOfConfig":"218"},{"size":519,"mtime":1633605584035,"results":"278","hashOfConfig":"218"},{"size":7199,"mtime":1654848738122,"results":"279","hashOfConfig":"218"},{"size":1262,"mtime":1634268748566,"results":"280","hashOfConfig":"218"},{"size":1782,"mtime":1634268748566,"results":"281","hashOfConfig":"218"},{"size":4541,"mtime":1646744157649,"results":"282","hashOfConfig":"218"},{"size":4563,"mtime":1652200840440,"results":"283","hashOfConfig":"218"},{"size":1310,"mtime":1652200860852,"results":"284","hashOfConfig":"218"},{"size":2162,"mtime":1649615560168,"results":"285","hashOfConfig":"218"},{"size":889,"mtime":1654492190160,"results":"286","hashOfConfig":"218"},{"size":1440,"mtime":1633605584051,"results":"287","hashOfConfig":"218"},{"size":3941,"mtime":1652200840444,"results":"288","hashOfConfig":"218"},{"size":1598,"mtime":1646744157665,"results":"289","hashOfConfig":"218"},{"size":3201,"mtime":1646744157665,"results":"290","hashOfConfig":"218"},{"size":4038,"mtime":1654847161889,"results":"291","hashOfConfig":"218"},{"size":5236,"mtime":1647941606751,"results":"292","hashOfConfig":"218"},{"size":384,"mtime":1646744157673,"results":"293","hashOfConfig":"218"},{"size":1311,"mtime":1654847085610,"results":"294","hashOfConfig":"218"},{"size":512,"mtime":1633605584031,"results":"295","hashOfConfig":"218"},{"size":858,"mtime":1633605584047,"results":"296","hashOfConfig":"218"},{"size":1743,"mtime":1637126070348,"results":"297","hashOfConfig":"218"},{"size":7289,"mtime":1652200840444,"results":"298","hashOfConfig":"218"},{"size":2286,"mtime":1652200840444,"results":"299","hashOfConfig":"218"},{"size":3499,"mtime":1651677810076,"results":"300","hashOfConfig":"218"},{"size":6102,"mtime":1654750238257,"results":"301","hashOfConfig":"218"},{"size":16448,"mtime":1654751305434,"results":"302","hashOfConfig":"218"},{"size":2512,"mtime":1643366884638,"results":"303","hashOfConfig":"218"},{"size":1543,"mtime":1643366884642,"results":"304","hashOfConfig":"218"},{"size":1153,"mtime":1633605584031,"results":"305","hashOfConfig":"218"},{"size":7807,"mtime":1652200860844,"results":"306","hashOfConfig":"218"},{"size":1523,"mtime":1654499517656,"results":"307","hashOfConfig":"218"},{"size":1336,"mtime":1654848703086,"results":"308","hashOfConfig":"218"},{"size":691,"mtime":1634268748570,"results":"309","hashOfConfig":"218"},{"size":1604,"mtime":1646744157649,"results":"310","hashOfConfig":"218"},{"size":1489,"mtime":1646744157649,"results":"311","hashOfConfig":"218"},{"size":957,"mtime":1633605584043,"results":"312","hashOfConfig":"218"},{"size":1459,"mtime":1633605584031,"results":"313","hashOfConfig":"218"},{"size":953,"mtime":1634268748566,"results":"314","hashOfConfig":"218"},{"size":3200,"mtime":1654847328053,"results":"315","hashOfConfig":"218"},{"size":788,"mtime":1646744157645,"results":"316","hashOfConfig":"218"},{"size":12574,"mtime":1649615560156,"results":"317","hashOfConfig":"218"},{"size":2267,"mtime":1646744157645,"results":"318","hashOfConfig":"218"},{"size":2244,"mtime":1646744157645,"results":"319","hashOfConfig":"218"},{"size":1285,"mtime":1646744157665,"results":"320","hashOfConfig":"218"},{"size":3503,"mtime":1646744157665,"results":"321","hashOfConfig":"218"},{"size":2298,"mtime":1646744157665,"results":"322","hashOfConfig":"218"},{"size":576,"mtime":1646744157669,"results":"323","hashOfConfig":"218"},{"size":2019,"mtime":1652200840436,"results":"324","hashOfConfig":"218"},{"size":1845,"mtime":1646744157669,"results":"325","hashOfConfig":"218"},{"size":838,"mtime":1633605584051,"results":"326","hashOfConfig":"218"},{"size":3741,"mtime":1652200860848,"results":"327","hashOfConfig":"218"},{"size":14523,"mtime":1649615560136,"results":"328","hashOfConfig":"218"},{"size":11127,"mtime":1652200840432,"results":"329","hashOfConfig":"218"},{"size":1520,"mtime":1647342460173,"results":"330","hashOfConfig":"218"},{"size":559,"mtime":1643366884626,"results":"331","hashOfConfig":"218"},{"size":787,"mtime":1643366884630,"results":"332","hashOfConfig":"218"},{"size":2444,"mtime":1646744157641,"results":"333","hashOfConfig":"218"},{"size":2466,"mtime":1646744157637,"results":"334","hashOfConfig":"218"},{"size":7349,"mtime":1646744157637,"results":"335","hashOfConfig":"218"},{"size":3692,"mtime":1649615560136,"results":"336","hashOfConfig":"218"},{"size":4262,"mtime":1643366884626,"results":"337","hashOfConfig":"218"},{"size":1089,"mtime":1633605584047,"results":"338","hashOfConfig":"218"},{"size":4117,"mtime":1654847366093,"results":"339","hashOfConfig":"218"},{"size":2805,"mtime":1646744157661,"results":"340","hashOfConfig":"218"},{"size":3736,"mtime":1654847235770,"results":"341","hashOfConfig":"218"},{"size":2711,"mtime":1654847345554,"results":"342","hashOfConfig":"218"},{"size":2953,"mtime":1646744157665,"results":"343","hashOfConfig":"218"},{"size":2412,"mtime":1646744157665,"results":"344","hashOfConfig":"218"},{"size":1332,"mtime":1646744157665,"results":"345","hashOfConfig":"218"},{"size":2955,"mtime":1646744157665,"results":"346","hashOfConfig":"218"},{"size":1535,"mtime":1649615560164,"results":"347","hashOfConfig":"218"},{"size":1031,"mtime":1646744157665,"results":"348","hashOfConfig":"218"},{"size":4088,"mtime":1646211599636,"results":"349","hashOfConfig":"218"},{"size":3621,"mtime":1652200860848,"results":"350","hashOfConfig":"218"},{"size":1514,"mtime":1646744157665,"results":"351","hashOfConfig":"218"},{"size":8085,"mtime":1646744157665,"results":"352","hashOfConfig":"218"},{"size":867,"mtime":1633605584047,"results":"353","hashOfConfig":"218"},{"size":2286,"mtime":1640137341170,"results":"354","hashOfConfig":"218"},{"size":3279,"mtime":1646744157665,"results":"355","hashOfConfig":"218"},{"size":3339,"mtime":1646744157665,"results":"356","hashOfConfig":"218"},{"size":949,"mtime":1640137341154,"results":"357","hashOfConfig":"218"},{"size":318,"mtime":1633605584047,"results":"358","hashOfConfig":"218"},{"size":1869,"mtime":1654847209525,"results":"359","hashOfConfig":"218"},{"size":1121,"mtime":1638196436201,"results":"360","hashOfConfig":"218"},{"size":1508,"mtime":1646744157665,"results":"361","hashOfConfig":"218"},{"size":1119,"mtime":1652200860840,"results":"362","hashOfConfig":"218"},{"size":11699,"mtime":1654752286950,"results":"363","hashOfConfig":"218"},{"size":492,"mtime":1633605584043,"results":"364","hashOfConfig":"218"},{"size":1619,"mtime":1633605584043,"results":"365","hashOfConfig":"218"},{"size":3250,"mtime":1646744157641,"results":"366","hashOfConfig":"218"},{"size":421,"mtime":1633605584023,"results":"367","hashOfConfig":"218"},{"size":146,"mtime":1633605584051,"results":"368","hashOfConfig":"218"},{"size":3390,"mtime":1646744157649,"results":"369","hashOfConfig":"218"},{"size":1474,"mtime":1652200860848,"results":"370","hashOfConfig":"218"},{"size":1746,"mtime":1646744157665,"results":"371","hashOfConfig":"218"},{"size":917,"mtime":1633605584043,"results":"372","hashOfConfig":"218"},{"size":608,"mtime":1649615560148,"results":"373","hashOfConfig":"218"},{"size":2657,"mtime":1633605584043,"results":"374","hashOfConfig":"218"},{"size":4874,"mtime":1640137341158,"results":"375","hashOfConfig":"218"},{"size":1904,"mtime":1633605584043,"results":"376","hashOfConfig":"218"},{"size":4872,"mtime":1646744157657,"results":"377","hashOfConfig":"218"},{"size":1867,"mtime":1633605584027,"results":"378","hashOfConfig":"218"},{"size":588,"mtime":1633605584023,"results":"379","hashOfConfig":"218"},{"size":1177,"mtime":1647342460173,"results":"380","hashOfConfig":"218"},{"size":1278,"mtime":1634268748566,"results":"381","hashOfConfig":"218"},{"size":695,"mtime":1643366884630,"results":"382","hashOfConfig":"218"},{"size":6042,"mtime":1646744157653,"results":"383","hashOfConfig":"218"},{"size":3005,"mtime":1649615560148,"results":"384","hashOfConfig":"218"},{"size":1174,"mtime":1633605584043,"results":"385","hashOfConfig":"218"},{"size":558,"mtime":1633605584023,"results":"386","hashOfConfig":"218"},{"size":550,"mtime":1647342460173,"results":"387","hashOfConfig":"218"},{"size":1184,"mtime":1647342460173,"results":"388","hashOfConfig":"218"},{"size":6570,"mtime":1646744157645,"results":"389","hashOfConfig":"218"},{"size":3028,"mtime":1646744157657,"results":"390","hashOfConfig":"218"},{"size":5441,"mtime":1646744157657,"results":"391","hashOfConfig":"218"},{"size":645,"mtime":1640137341142,"results":"392","hashOfConfig":"218"},{"size":1417,"mtime":1654534363675,"results":"393","hashOfConfig":"218"},{"size":746,"mtime":1633605584023,"results":"394","hashOfConfig":"218"},{"size":664,"mtime":1633605584023,"results":"395","hashOfConfig":"218"},{"size":774,"mtime":1646744157673,"results":"396","hashOfConfig":"218"},{"size":909,"mtime":1646744157669,"results":"397","hashOfConfig":"218"},{"size":1146,"mtime":1646211599628,"results":"398","hashOfConfig":"218"},{"size":185,"mtime":1637906940499,"results":"399","hashOfConfig":"218"},{"size":1600,"mtime":1640137341166,"results":"400","hashOfConfig":"218"},{"size":5321,"mtime":1652200840436,"results":"401","hashOfConfig":"218"},{"size":4907,"mtime":1654534113265,"results":"402","hashOfConfig":"218"},{"size":3793,"mtime":1654750349810,"results":"403","hashOfConfig":"218"},{"size":1756,"mtime":1644461430676,"results":"404","hashOfConfig":"218"},{"size":1363,"mtime":1646744157641,"results":"405","hashOfConfig":"218"},{"size":435,"mtime":1633605584047,"results":"406","hashOfConfig":"218"},{"size":316,"mtime":1637906940499,"results":"407","hashOfConfig":"218"},{"size":294,"mtime":1647342460173,"results":"408","hashOfConfig":"218"},{"size":1359,"mtime":1646744157653,"results":"409","hashOfConfig":"218"},{"size":2456,"mtime":1644461430680,"results":"410","hashOfConfig":"218"},{"size":2069,"mtime":1646744157673,"results":"411","hashOfConfig":"218"},{"size":1403,"mtime":1643366884630,"results":"412","hashOfConfig":"218"},{"size":3602,"mtime":1652200860840,"results":"413","hashOfConfig":"218"},{"size":2259,"mtime":1646744157649,"results":"414","hashOfConfig":"218"},{"size":1272,"mtime":1652200860844,"results":"415","hashOfConfig":"218"},{"size":1366,"mtime":1652200840436,"results":"416","hashOfConfig":"218"},{"size":966,"mtime":1652200860844,"results":"417","hashOfConfig":"218"},{"size":2056,"mtime":1649615560164,"results":"418","hashOfConfig":"218"},{"size":319,"mtime":1633605584047,"results":"419","hashOfConfig":"218"},{"size":1729,"mtime":1649615560164,"results":"420","hashOfConfig":"218"},{"size":959,"mtime":1652200860848,"results":"421","hashOfConfig":"218"},{"size":1936,"mtime":1646744157649,"results":"422","hashOfConfig":"218"},{"size":2048,"mtime":1646744157653,"results":"423","hashOfConfig":"218"},{"size":651,"mtime":1637906940475,"results":"424","hashOfConfig":"218"},{"size":2662,"mtime":1649615560140,"results":"425","hashOfConfig":"218"},{"size":1354,"mtime":1643366884630,"results":"426","hashOfConfig":"218"},{"size":4316,"mtime":1646211599624,"results":"427","hashOfConfig":"218"},{"size":2839,"mtime":1644461430680,"results":"428","hashOfConfig":"218"},{"size":5671,"mtime":1646211599628,"results":"429","hashOfConfig":"218"},{"size":1127,"mtime":1647342460173,"results":"430","hashOfConfig":"218"},{"size":895,"mtime":1633605584027,"results":"431","hashOfConfig":"218"},{"size":1781,"mtime":1633605584039,"results":"432","hashOfConfig":"218"},{"size":826,"mtime":1652200860840,"results":"433","hashOfConfig":"218"},{"filePath":"434","messages":"435","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},"14o87z8",{"filePath":"437","messages":"438","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"439","messages":"440","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"441","messages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"443","messages":"444","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"445","messages":"446","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"447","messages":"448","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"449","messages":"450","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"451","messages":"452","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"453","messages":"454","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"455","messages":"456","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"457","messages":"458","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"459","usedDeprecatedRules":"436"},{"filePath":"460","messages":"461","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"462","messages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"464","messages":"465","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"466","messages":"467","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"468","messages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"470","messages":"471","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"472","messages":"473","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"474","messages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"476","messages":"477","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"478","messages":"479","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"480","messages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"482","messages":"483","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"484","messages":"485","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"486","messages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"488","messages":"489","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"490","messages":"491","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"492","messages":"493","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"494","messages":"495","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"496","messages":"497","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"498","messages":"499","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"500","messages":"501","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"502","messages":"503","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"504","messages":"505","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"506","messages":"507","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"508","messages":"509","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"510","messages":"511","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"512","usedDeprecatedRules":"436"},{"filePath":"513","messages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"515","messages":"516","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"517","messages":"518","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"519","messages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"521","messages":"522","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"523","messages":"524","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"525","messages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"527","messages":"528","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"529","messages":"530","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"531","messages":"532","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"533","messages":"534","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"535","messages":"536","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"537","messages":"538","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"539","messages":"540","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"541","messages":"542","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"543","messages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"545","messages":"546","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"547","usedDeprecatedRules":"436"},{"filePath":"548","messages":"549","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"550","messages":"551","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"552","messages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"554","messages":"555","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"556","messages":"557","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"558","messages":"559","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"560","messages":"561","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"562","messages":"563","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"564","messages":"565","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"566","messages":"567","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"568","messages":"569","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"570","messages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"572","messages":"573","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"574","messages":"575","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"576","messages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"578","messages":"579","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"580","messages":"581","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"582","messages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"584","messages":"585","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"586","messages":"587","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"588","messages":"589","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"590","messages":"591","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"592","messages":"593","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"594","messages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"596","messages":"597","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"598","messages":"599","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"600","messages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"602","messages":"603","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"604","messages":"605","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"606","usedDeprecatedRules":"436"},{"filePath":"607","messages":"608","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609","usedDeprecatedRules":"436"},{"filePath":"610","messages":"611","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"612","messages":"613","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"614","messages":"615","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"616","messages":"617","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"618","usedDeprecatedRules":"436"},{"filePath":"619","messages":"620","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"621","usedDeprecatedRules":"436"},{"filePath":"622","messages":"623","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"624","usedDeprecatedRules":"436"},{"filePath":"625","messages":"626","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"627","messages":"628","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"629","messages":"630","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"631","messages":"632","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"633","messages":"634","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"635","messages":"636","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"637","messages":"638","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"639","messages":"640","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"641","messages":"642","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"643","usedDeprecatedRules":"436"},{"filePath":"644","messages":"645","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"646","messages":"647","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"648","messages":"649","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"650","messages":"651","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"652","messages":"653","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"654","messages":"655","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"656","messages":"657","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"658","messages":"659","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"660","messages":"661","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"662","messages":"663","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"664","messages":"665","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"666","usedDeprecatedRules":"436"},{"filePath":"667","messages":"668","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"669","messages":"670","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"671","messages":"672","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"673","messages":"674","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"675","messages":"676","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"677","messages":"678","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"679","messages":"680","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"681","messages":"682","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"683","usedDeprecatedRules":"436"},{"filePath":"684","messages":"685","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"686","messages":"687","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"688","messages":"689","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"690","messages":"691","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"692","messages":"693","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"694","messages":"695","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"696","messages":"697","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"698","messages":"699","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"700","messages":"701","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"702","messages":"703","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"704","messages":"705","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"706","messages":"707","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"708","messages":"709","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"710","messages":"711","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"712","messages":"713","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"714","messages":"715","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"716","messages":"717","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"718","messages":"719","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"720","messages":"721","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"722","messages":"723","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"724","messages":"725","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"726","messages":"727","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"728","messages":"729","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"730","messages":"731","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"732","messages":"733","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"734","messages":"735","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"736","messages":"737","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"738","messages":"739","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"740","messages":"741","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"742","messages":"743","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"744","messages":"745","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"746","messages":"747","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"748","messages":"749","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"750","messages":"751","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"752","messages":"753","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"754","messages":"755","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"756","messages":"757","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"758","usedDeprecatedRules":"436"},{"filePath":"759","messages":"760","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"761","messages":"762","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"763","messages":"764","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"765","messages":"766","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"767","messages":"768","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"769","messages":"770","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"771","messages":"772","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"773","messages":"774","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"775","messages":"776","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"777","messages":"778","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"779","usedDeprecatedRules":"436"},{"filePath":"780","messages":"781","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"782","messages":"783","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"784","messages":"785","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"786","messages":"787","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"788","messages":"789","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"790","messages":"791","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"792","messages":"793","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"794","messages":"795","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"796","messages":"797","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"798","messages":"799","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"800","usedDeprecatedRules":"436"},{"filePath":"801","messages":"802","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"803","messages":"804","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"805","messages":"806","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"807","messages":"808","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"809","messages":"810","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"811","messages":"812","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"813","messages":"814","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"815","messages":"816","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"817","messages":"818","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"819","usedDeprecatedRules":"436"},{"filePath":"820","messages":"821","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"822","usedDeprecatedRules":"436"},{"filePath":"823","messages":"824","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"825","messages":"826","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"827","messages":"828","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"829","messages":"830","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"831","messages":"832","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"833","messages":"834","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"835","messages":"836","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"837","messages":"838","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"839","messages":"840","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"841","messages":"842","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"843","messages":"844","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"845","messages":"846","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"847","messages":"848","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"849","messages":"850","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"851","messages":"852","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"853","messages":"854","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"855","messages":"856","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"857","messages":"858","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"859","messages":"860","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"861","messages":"862","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"863","messages":"864","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"865","messages":"866","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"867","messages":"868","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"869","messages":"870","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"871","messages":"872","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"873","messages":"874","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"875","messages":"876","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"877","messages":"878","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"879","messages":"880","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},{"filePath":"881","messages":"882","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"436"},"/home/holo/Desktop/rsm/kizuna/ui/src/index.tsx",[],["883","884"],"/home/holo/Desktop/rsm/kizuna/ui/src/app/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/containers/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/containers/ErrorHandlerContainer.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/containers/IntlContainer.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/containers/IonicContainer.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/containers/ReduxContainer.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/containers/RouterContainer.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/Auth/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/containers/ToastContainer/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/containers/ToastContainer/context.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/store.ts",["885","886"],"import { AnyAction, applyMiddleware, createStore as create } from \"redux\";\nimport thunk, { ThunkMiddleware } from \"redux-thunk\";\nimport {\n  callZome,\n  client,\n  getAgentId,\n  init,\n  retry,\n} from \"../utils/services/HolochainService\";\nimport rootReducer from \"./reducers\";\n// import { RootState } from \"./types\";\n\nconst createStore = (args?: Object) => {\n  const modifiedThunk = thunk.withExtraArgument({\n    callZome,\n    getAgentId,\n    retry,\n    client,\n    init,\n    ...args,\n  });\n\n  return create(rootReducer, applyMiddleware(modifiedThunk));\n};\n\nexport default createStore;\n","/home/holo/Desktop/rsm/kizuna/ui/src/redux/error/actions.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/utils/services/ReduxService.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/lang/index.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/reducers.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/error/types.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/language/actions/index.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/LanguageSelector/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/language/reducer.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/error/reducer.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/utils/services/HolochainService/index.ts",["887","888","889","890","891","892"],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/profile/reducer.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/profile/actions/index.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/language/actions/getLanguage.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/language/actions/setLanguage.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/contacts/reducer.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/reducer.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/preference/reducer.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/reducer.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/gif/reducer.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/Authenticated/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/Unauthenticated/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/Spinner/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/language/types.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/profile/actions/createProfile.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/profile/actions/getAgentId.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/profile/actions/getMyProfile.ts",["893"],"import { serializeHash } from \"@holochain-open-dev/core-types\";\nimport { binaryToUrl } from \"../../../utils/services/ConversionService\";\nimport {\n  FUNCTIONS,\n  ZOMES,\n} from \"../../../utils/services/HolochainService/types\";\nimport { ThunkAction } from \"../../types\";\nimport { ProfileActionTypes, SET_PROFILE } from \"../types\";\n\nconst getMyProfile =\n  (): ThunkAction =>\n  async (dispatch, getState, { callZome, getAgentId }) => {\n    try {\n      const res = await callZome({\n        zomeName: ZOMES.PROFILES,\n        fnName: FUNCTIONS[ZOMES.PROFILES].GET_MY_PROFILE,\n      });\n      // const myAgentId = await getAgentId();\n      // /* assume that getAgentId() is non-nullable */\n      // const myAgentIdB64 = serializeHash(myAgentId!);\n      const myAgentIdB64 = getState().profile.id!;\n      if (res) {\n        dispatch<ProfileActionTypes>({\n          type: SET_PROFILE,\n          nickname: res.profile.nickname,\n          id: myAgentIdB64,\n          fields: res.profile.fields.avatar\n            ? {\n                avatar: binaryToUrl(res.profile.fields.avatar),\n              }\n            : {},\n        });\n      }\n      return true;\n    } catch (e) {}\n    return false;\n  };\n\nexport default getMyProfile;\n","/home/holo/Desktop/rsm/kizuna/ui/src/redux/profile/types.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/profile/actions/searchProfiles.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/profile/actions/logout.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/contacts/types.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/preference/types.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/types.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/gif/types.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/types.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/signal/actions.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/commons/actions.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/utils/services/HolochainService/types.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/utils/services/ConversionService.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/utils/services/DateService.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/signals/pinMessageData.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/setMessages.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/signals/recommitMessage.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/Menu/index.tsx",["894","895"],"import {\n  IonAvatar,\n  IonContent,\n  IonFooter,\n  IonIcon,\n  IonItem,\n  IonItemGroup,\n  IonLabel,\n  IonList,\n  IonMenu,\n  IonText,\n  IonToolbar,\n  IonImg,\n} from \"@ionic/react\";\nimport {\n  banOutline,\n  cogOutline,\n  logOutOutline,\n  warningOutline,\n} from \"ionicons/icons\";\nimport React, { useRef } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { logout } from \"../../redux/profile/actions\";\nimport { Profile } from \"../../redux/profile/types\";\nimport { RootState } from \"../../redux/types\";\nimport { useAppDispatch } from \"../../utils/services/ReduxService\";\nimport Identicon from \"../Identicon\";\nimport styles from \"./style.module.css\";\n\ninterface MenuItem {\n  onClick(): any;\n  label: string;\n  icon: string;\n  disabled?: boolean;\n}\n\nconst Menu: React.FC = () => {\n  const history = useHistory();\n  const { username, id, fields } = useSelector((state: RootState) => {\n    return { ...state.profile };\n  });\n\n  const intl = useIntl();\n  const dispatch = useAppDispatch();\n  const menu = useRef<any>(null);\n\n  const menuList: MenuItem[] = [\n    {\n      onClick: () => {\n        history.push(\"/settings\");\n      },\n      label: intl.formatMessage({ id: \"app.menu.settings-label\" }),\n      icon: cogOutline,\n    },\n    {\n      onClick: () => {\n        history.push(\"/blocked\");\n      },\n      label: intl.formatMessage({ id: \"app.menu.blocked-label\" }),\n      icon: banOutline,\n    },\n    {\n      onClick: () =>\n        window.open(\n          \"https://github.com/hc-institute-japan/kizuna/issues/new?assignees=&labels=bug&template=bug_report.md&title=\"\n        ),\n      label: intl.formatMessage({ id: \"app.menu.report-label\" }),\n      icon: warningOutline,\n    },\n    {\n      onClick: () => {\n        // const c = (client as any).connection;\n        // await c.signOut();\n        // await c.signIn();\n        dispatch(logout());\n      },\n      label: intl.formatMessage({ id: \"app.menu.logout-label\" }),\n      icon: logOutOutline,\n      disabled:\n        process.env.REACT_APP_ENVENV === \"HCC\" ||\n        process.env.REACT_APP_ENVENV === \"HOLO\"\n          ? false\n          : true,\n    },\n  ];\n\n  const handleOnClick = () => {\n    menu?.current?.close();\n    history.push({\n      pathname: `/p/${id}`,\n      state: { profile: { username, id, fields } as Profile, prev: `/home` },\n    });\n  };\n\n  return (\n    <IonMenu ref={menu} contentId=\"main\" type=\"overlay\">\n      <IonContent className={`${styles.menu} ion-padding-top`}>\n        <IonList id=\"inbox-list\" lines=\"none\">\n          <IonItemGroup className=\"ion-no-margin\">\n            <div\n              onClick={handleOnClick}\n              className={`${styles.container} ion-padding`}\n            >\n              {fields.avatar ? (\n                <IonAvatar>\n                  <img src={fields.avatar} alt=\"avatar\"></img>\n                </IonAvatar>\n              ) : (\n                // <Identicon hash={id!} size={60} />\n                <IonAvatar>\n                  <img\n                    src=\"assets/icon/person-circle-outline.png\"\n                    alt=\"avatar\"\n                  ></img>\n                </IonAvatar>\n              )}\n            </div>\n\n            <IonItem onClick={handleOnClick} lines=\"none\">\n              <IonLabel>{username}</IonLabel>\n            </IonItem>\n          </IonItemGroup>\n          {menuList.map(({ onClick, label, icon, disabled = false }) => (\n            <IonItem\n              key={label}\n              onClick={() => {\n                menu?.current?.close();\n                onClick();\n              }}\n              disabled={disabled}\n            >\n              <IonIcon className=\"ion-margin-end\" icon={icon} />\n              <IonLabel>{label}</IonLabel>\n            </IonItem>\n          ))}\n        </IonList>\n      </IonContent>\n      <IonFooter className=\"ion-no-border\">\n        <IonToolbar>\n          <IonText className={`ion-padding ${styles[\"version\"]}`}>\n            {intl.formatMessage({ id: \"app.menu.version\" })} 0.2.4\n          </IonText>\n        </IonToolbar>\n      </IonFooter>\n    </IonMenu>\n  );\n};\n\nexport default Menu;\n","/home/holo/Desktop/rsm/kizuna/ui/src/app/Chat/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/Blocked/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/Home/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/GroupChat/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/NewConversation/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/Settings/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/Profile/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/Landing/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/Login/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/Register/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/helpers/transformZomeDateToUIData.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/signals/typingP2P.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/signals/groupTypingDetail.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/signals/receiveP2PReceipt.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/signals/receiveP2PPin.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/signals/receiveP2PMessage.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/signals/groupMessageRead.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/signals/groupMessageData.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/signals/addedToGroup.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/helpers/index.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/utils/services/RegexService.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/profile/actions/updateAvatar.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/NewConversation/context.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/appendReceipt.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/appendMessage.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/sendMessage.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/setErrMessage.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/commons/types.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/GroupChat/GroupChatContent.tsx",["896","897"],"import { IonContent, IonPage } from \"@ionic/react\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useParams } from \"react-router\";\n// Components\nimport { ChatListMethods } from \"../../components/Chat/types\";\nimport Typing from \"../../components/Chat/Typing\";\nimport MessageInput, {\n  FileContent,\n  MessageInputMethods,\n  MessageInputOnSendParams,\n} from \"../../components/MessageInput\";\n// Redux\nimport { FilePayloadInput } from \"../../redux/commons/types\";\nimport {\n  indicateGroupTyping,\n  sendGroupMessage,\n  setErrGroupMessage,\n} from \"../../redux/group/actions\";\nimport { fetchPinnedMessages } from \"../../redux/group/actions/fetchPinnedMessages\";\nimport { GroupMessageInput } from \"../../redux/group/types\";\nimport { RootState } from \"../../redux/types\";\nimport { useAppDispatch } from \"../../utils/services/ReduxService\";\n// Utils\n\nimport ChatBox from \"./ChatBox\";\nimport GroupChatHeader from \"./GroupChatHeader\";\n\ninterface GroupChatParams {\n  group: string;\n}\n\nconst GroupChat: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { group } = useParams<GroupChatParams>();\n  const [isTyping, setIsTyping] = useState(false);\n\n  /* local states */\n  const [files, setFiles] = useState<FileContent[]>([]);\n  const [message, setMessage] = useState(\"\");\n\n  /* Refs */\n  const chatList = useRef<ChatListMethods>(null);\n  const inputTimeout = useRef<NodeJS.Timeout>();\n  const messageInput = useRef<MessageInputMethods | null>(null);\n\n  /* Selectors */\n  const groupData = useSelector(\n    (state: RootState) => state.groups.conversations[group]\n  );\n\n  const myProfile = useSelector((state: RootState) => state.profile);\n  const typing = useSelector((state: RootState) => state.groups.typing);\n  const { readReceipt, typingIndicator } = useSelector(\n    (state: RootState) => state.preference\n  );\n\n  /* Hooks */\n\n  useEffect(() => {\n    if (groupData) dispatch(fetchPinnedMessages(groupData?.originalGroupId));\n  }, [groupData, dispatch]);\n\n  /* Handlers */\n\n  /* handles sending of messages. */\n  const handleOnSend = (opt?: MessageInputOnSendParams) => {\n    const { message: message2, reply, setIsLoading } = { ...opt };\n    let text: GroupMessageInput | null = null;\n    let file: GroupMessageInput | null = null;\n    setIsLoading!(true);\n    /*\n      append text payload at index 0 and send it first\n      for performance purposes\n    */\n    if (message2!.length) {\n      text = {\n        groupId: groupData!.originalGroupId,\n        payloadInput: {\n          type: \"TEXT\",\n          payload: { payload: message2! },\n        },\n        sender: myProfile.id!,\n        // TODO: handle replying to message here as well\n        replyTo: reply,\n      };\n    }\n\n    if (files.length) {\n      // TODO: change when uploading of multiple files is allowed\n      const filePayload: any = files[0];\n      const filePayloadInput: FilePayloadInput = {\n        type: \"FILE\",\n        payload: {\n          metadata: {\n            fileName: filePayload.metadata.fileName,\n            fileSize: filePayload.metadata.fileSize,\n            fileType: filePayload.metadata.fileType,\n          },\n          fileType: filePayload.fileType,\n          fileBytes: filePayload.fileBytes,\n        },\n      };\n      file = {\n        /* groupData is non-nullable once the page renders */\n        groupId: groupData!.originalGroupId,\n        payloadInput: filePayloadInput,\n        sender: myProfile.id!,\n        // TODO: handle replying to message here as well\n        replyTo: reply,\n      };\n    }\n\n    if (text) {\n      dispatch(sendGroupMessage(text)).then((res: any) => {\n        if (res === false) dispatch(setErrGroupMessage(text!));\n        if (file) {\n          dispatch(sendGroupMessage(file)).then((res: any) => {\n            if (!res) dispatch(setErrGroupMessage(file!));\n            setIsLoading!(false);\n            chatList.current!.scrollToBottom();\n          });\n        }\n        setIsLoading!(false);\n        chatList.current!.scrollToBottom();\n      });\n    } else if (file) {\n      dispatch(sendGroupMessage(file)).then((res: any) => {\n        if (!res) dispatch(setErrGroupMessage(file!));\n        setIsLoading!(false);\n        chatList.current!.scrollToBottom();\n      });\n    }\n  };\n\n  /* \n      handle change in message input. indicate typing as the user types \n      but debounce with 500ms to indicate false in\n    */\n\n  useEffect(() => {\n    const members = [...groupData.members, groupData.creator].filter(\n      (member) => member !== myProfile.id\n    );\n\n    console.log(\"dispatching group typing action\");\n    dispatch(\n      indicateGroupTyping({\n        groupId: groupData.originalGroupId,\n        indicatedBy: myProfile.id!,\n        members,\n        isTyping,\n      })\n    );\n  }, [isTyping]);\n\n  useEffect(() => {\n    if (typingIndicator) {\n      // Remove self from the recipient of typing signal\n\n      if (isTyping !== (message.length !== 0))\n        setIsTyping(message.length !== 0);\n\n      if (inputTimeout.current) clearTimeout(inputTimeout.current);\n\n      inputTimeout.current = setTimeout(() => setIsTyping(false), 2500);\n    }\n  }, [message]);\n\n  return groupData ? (\n    <IonPage>\n      <GroupChatHeader groupData={groupData} />\n      <IonContent>\n        {/* <PinnedMessage></PinnedMessage> */}\n        <ChatBox\n          onReply={(message) => {\n            if (messageInput.current) messageInput?.current?.reply(message);\n          }}\n          groupId={groupData.originalGroupId}\n          members={[...groupData.members, groupData.creator]}\n          messageIds={groupData.messages}\n          chatList={chatList}\n          readReceipt={readReceipt}\n        />\n      </IonContent>\n\n      <Typing\n        profiles={\n          typing[groupData.originalGroupId]\n            ? typing[groupData.originalGroupId]\n            : []\n        }\n      />\n      <MessageInput\n        ref={messageInput}\n        onSend={handleOnSend}\n        onChange={(message: string) => setMessage(message)}\n        onFileSelect={(files) => setFiles(files)}\n      />\n    </IonPage>\n  ) : null;\n};\n\nexport default GroupChat;\n","/home/holo/Desktop/rsm/kizuna/ui/src/app/Chat/ChatContent.tsx",["898"],"import { IonContent, IonPage } from \"@ionic/react\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation, useParams } from \"react-router\";\nimport { ChatList, Me, Others } from \"../../components/Chat\";\nimport { ChatListMethods } from \"../../components/Chat/types\";\nimport Typing from \"../../components/Chat/Typing\";\nimport MessageInput, {\n  FileContent,\n  MessageInputMethods,\n  MessageInputOnSendParams,\n} from \"../../components/MessageInput\";\nimport { FilePayload } from \"../../redux/commons/types\";\nimport { fetchMyContacts } from \"../../redux/contacts/actions\";\nimport { getFileBytes } from \"../../redux/p2pmessages/actions/getFileBytes\";\nimport { getPreviousMessages } from \"../../redux/p2pmessages/actions/getPreviousMessages\";\nimport { getPinnedMessages } from \"../../redux/p2pmessages/actions/getPinnedMessages\";\nimport { getP2PState } from \"../../redux/p2pmessages/actions/helpers/getP2PState\";\nimport { isTyping } from \"../../redux/p2pmessages/actions/isTyping\";\n// type imports\nimport { pinMessage } from \"../../redux/p2pmessages/actions/pinMessage\";\nimport { readMessage } from \"../../redux/p2pmessages/actions/readMessage\";\nimport removeErrMessage from \"../../redux/p2pmessages/actions/removeErrMessage\";\nimport { sendMessage } from \"../../redux/p2pmessages/actions/sendMessage\";\nimport { setErrorMessage } from \"../../redux/p2pmessages/actions/setErrMessage\";\nimport {\n  P2PHashMap,\n  P2PMessage,\n  P2PMessageReceipt,\n} from \"../../redux/p2pmessages/types\";\nimport { Profile } from \"../../redux/profile/types\";\nimport { RootState } from \"../../redux/types\";\n\nimport ChatHeader from \"./ChatHeader\";\nimport recommitMessage from \"../../redux/p2pmessages/actions/signals/recommitMessage\";\nimport { useAppDispatch } from \"../../utils/services/ReduxService\";\n\nconst Chat: React.FC = () => {\n  const dispatch = useAppDispatch();\n  /* STATES */\n  const { id } = useParams<{ id: string }>();\n  const [message, setMessage] = useState<string>(\"\");\n  const [files, setFiles] = useState<FileContent[]>([]);\n  const [replyTo, setReplyTo] = useState<string>(\"\");\n  const [messagesWithConversant, setMessagesWithConversant] = useState<\n    {\n      message: P2PMessage;\n      receipt?: P2PMessageReceipt | undefined;\n    }[]\n  >([]);\n  const [messageReceipts, setMessageReceipts] = useState<P2PMessage[]>([]);\n  const [disableGetPrevious, setDisableGetPrevious] = useState<boolean>(false);\n  const {\n    conversations,\n    messages,\n    receipts,\n    errMsgs,\n    files: fetchedFiles,\n    pinned,\n  } = useSelector((state: RootState) => state.p2pmessages);\n\n  const typing = useSelector((state: RootState) => {\n    const allTypingProfiles = state.p2pmessages.typing;\n    const typingProfile = Object.values(allTypingProfiles).filter(\n      (profile) => profile.id === id\n    );\n    return typingProfile;\n  });\n  const conversant = useSelector((state: RootState) => {\n    const contacts = state.contacts.contacts;\n    console.log(\"contacts state is \", contacts);\n    const conversant = Object.values(contacts).filter(\n      (contact) => contact.id === id\n    );\n    console.log(\"conversant from state is \", conversant);\n    return conversant[0];\n  });\n  const { readReceipt, typingIndicator } = useSelector(\n    (state: RootState) => state.preference\n  );\n\n  const { pathname, state }: { pathname: string; state: { username: string } } =\n    useLocation();\n\n  const username = useSelector((rootState: RootState) => {\n    if (state?.username) return state?.username;\n    if (rootState.contacts?.contacts[id]?.username)\n      return rootState.contacts?.contacts[id]?.username;\n    return \"\";\n  });\n  /* REFS */\n  const scrollerRef = useRef<ChatListMethods>(null);\n  const didMountRef = useRef(false);\n  const receiptsTimeout = useRef<NodeJS.Timeout>();\n  // const didMountRef2 = useRef(false);\n  const inputTimeout = useRef<NodeJS.Timeout>();\n  const messageInputRef = useRef<MessageInputMethods | null>(null);\n\n  /* USE EFFECTS */\n  /* \n      scrolls the conversation to the bottom \n      when opening a chat box\n    */\n  useEffect(() => {\n    scrollerRef.current!.scrollToBottom();\n  }, []);\n\n  useEffect(() => {\n    scrollerRef.current!.scrollToBottom();\n  }, [conversant]);\n\n  /* \n    filters messages with conversant and\n    filters latest receipt/status\n    when redux state of p2pmessages changes\n  */\n  useEffect(() => {\n    if (conversant !== undefined) {\n      dispatch(getP2PState(conversant)).then((res: any) =>\n        setMessagesWithConversant(res)\n      );\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [conversations, messages, receipts, conversant, errMsgs]);\n\n  useEffect(() => {\n    dispatch(getPinnedMessages(id));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  // debounce to dispatch readMessage\n  useEffect(() => {\n    if (messageReceipts.length > 0) {\n      if (receiptsTimeout.current) clearTimeout(receiptsTimeout.current);\n      receiptsTimeout.current = setTimeout(() => {\n        dispatch(readMessage(messageReceipts));\n        setMessageReceipts([]);\n      }, 1000);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [messageReceipts]);\n\n  /* HANDLERS */\n  /*\n    dispatches a typing indicator when the user types.\n    call typing indicator with false parameter with debounce of 500ms as well.\n  */\n  const handleOnChange = (message: string, conversant: Profile) => {\n    if (didMountRef.current === true) {\n      if (typingIndicator) {\n        dispatch(\n          isTyping(\n            conversant.id,\n            message && message.length !== 0 ? true : false\n          )\n        );\n\n        if (inputTimeout.current) clearTimeout(inputTimeout.current);\n\n        inputTimeout.current = setTimeout(\n          () => dispatch(isTyping(conversant.id, false)),\n          500\n        );\n      }\n      setMessage(message);\n    } else {\n      didMountRef.current = true;\n    }\n  };\n\n  /* \n      dispatches an action to hc to send a message\n      together with any file attached\n      when clicking the send button  \n    */\n  const handleOnSubmit = (opt?: MessageInputOnSendParams) => {\n    let { message: message2, setIsLoading } = { ...opt };\n    setIsLoading!(true);\n    if (message2 && message2 !== \"\") {\n      dispatch(\n        sendMessage(\n          conversant.id,\n          message2,\n          \"TEXT\",\n          replyTo !== \"\" ? replyTo : undefined\n        )\n      ).then((res: any) => {\n        if (!res) {\n          dispatch(\n            setErrorMessage(\n              conversant.id,\n              message,\n              \"TEXT\",\n              replyTo !== \"\" ? replyTo : undefined\n            )\n          );\n        }\n        return files.length\n          ? files.forEach((file) =>\n              dispatch(\n                sendMessage(\n                  conversant.id,\n                  message,\n                  \"FILE\",\n                  replyTo !== \"\" ? replyTo : undefined,\n                  file\n                )\n              ).then((res: any) => {\n                if (!res) {\n                  dispatch(\n                    setErrorMessage(\n                      conversant.id,\n                      message,\n                      \"FILE\",\n                      replyTo !== \"\" ? replyTo : undefined,\n                      file\n                    )\n                  );\n                }\n                setIsLoading!(false);\n              })\n            )\n          : setIsLoading!(false);\n      });\n    }\n\n    if (message2 === \"\" && files.length) {\n      files.forEach((file) =>\n        dispatch(\n          sendMessage(\n            conversant.id,\n            message,\n            \"FILE\",\n            replyTo !== \"\" ? replyTo : undefined,\n            file\n          )\n        ).then((res: any) => {\n          if (!res) {\n            dispatch(\n              setErrorMessage(\n                conversant.id,\n                message,\n                \"FILE\",\n                replyTo !== \"\" ? replyTo : undefined,\n                file\n              )\n            );\n          }\n          setIsLoading!(false);\n        })\n      );\n    }\n    scrollerRef.current!.scrollToBottom();\n    setReplyTo(\"\");\n  };\n\n  /* \n      disptaches an action to hc to get the next batch of older messages\n      when reaching the beginning/top of the chat box\n    */\n  const handleOnScrollTop = (complete: any) => {\n    if (disableGetPrevious === false) {\n      const lastMessage = messagesWithConversant[0]\n        ? messagesWithConversant[0].message\n        : null;\n      if (lastMessage && !lastMessage.err) {\n        dispatch(\n          getPreviousMessages(\n            conversant.id,\n            5,\n            \"All\",\n            lastMessage.timestamp,\n            lastMessage.p2pMessageEntryHash\n          )\n        ).then((res: P2PHashMap) => {\n          // disable getPrevious if return value is empty\n          if (res && Object.values(res)[0][conversant.id].length <= 0) {\n            setDisableGetPrevious(true);\n          }\n          return complete();\n        });\n      }\n    }\n    return complete();\n  };\n\n  /* \n      dispatches an action to hc to mark a message as read \n      which emits a signal to the sender\n      when the chat bubble comes into view\n    */\n\n  const onSeenHandler = (messageBundle: {\n    message: P2PMessage;\n    receipt?: P2PMessageReceipt;\n  }) => {\n    if (messageBundle.receipt!.status !== \"read\" && readReceipt) {\n      // dispatch(readMessage([messageBundle.message]));\n      setMessageReceipts((currMessageReceipts) => [\n        ...currMessageReceipts,\n        messageBundle.message,\n      ]);\n    }\n  };\n\n  /* \n    downloads a file when already in redux state\n    if not, dispatches an action to get the file from hc\n    when clicking the file download button\n  */\n  const onDownloadHandler = (file: FilePayload) => {\n    fetchedFiles[file.fileHash!] !== undefined\n      ? downloadFile(fetchedFiles[file.fileHash!], file.fileName)\n      : dispatch(getFileBytes([file.fileHash!])).then(\n          (res: { [key: string]: Uint8Array }) => {\n            if (res && Object.keys(res).length > 0) {\n              downloadFile(res[file.fileHash!], file.fileName);\n            }\n          }\n        );\n  };\n  const downloadFile = (fileBytes: Uint8Array, fileName: string) => {\n    const blob = new Blob([fileBytes]); // change resultByte to bytes\n    const link = document.createElement(\"a\");\n    link.href = window.URL.createObjectURL(blob);\n    link.download = fileName;\n    link.click();\n  };\n\n  /* \n    handles retry of sending error message\n  */\n  const onRetryHandler = (setLoading: any, message: P2PMessage) => {\n    setLoading(true);\n\n    if (message.p2pMessageEntryHash === \"error message\") {\n      if (message.payload.type === \"TEXT\") {\n        dispatch(\n          sendMessage(\n            conversant.id,\n            message.payload.payload.payload,\n            \"TEXT\",\n            message.replyToId\n          )\n        ).then((res: any) => {\n          setLoading(false);\n          if (!res) return null;\n          dispatch(removeErrMessage(message));\n        });\n      } else {\n        const file: FileContent = {\n          metadata: {\n            fileName: message.payload.fileName,\n            fileType: message.payload.fileType,\n            fileSize: message.payload.fileSize,\n          },\n          fileType: {\n            type: message.payload.fileType,\n            payload:\n              message.payload.fileType === \"OTHER\"\n                ? undefined\n                : { thumbnail: message.payload.thumbnail! },\n          },\n          fileBytes: message.payload.fileBytes!,\n        };\n        dispatch(\n          sendMessage(\n            conversant.id,\n            \"\",\n            \"FILE\",\n            replyTo !== \"\" ? replyTo : undefined,\n            file\n          )\n        ).then((res: any) => {\n          setLoading(false);\n          if (!res) return null;\n          dispatch(removeErrMessage(message));\n        });\n      }\n    } else {\n      dispatch(recommitMessage(message)).then((res: any) => setLoading(false));\n    }\n  };\n\n  /* \n    renders the appropriate chat bubble\n  */\n  const displayMessage = (messageBundle: {\n    message: P2PMessage;\n    receipt?: P2PMessageReceipt;\n  }) => {\n    // assume that this will be called with messages in sorted order\n    const key = messageBundle.message.p2pMessageEntryHash;\n    const author = messageBundle.message.author;\n    const payload = messageBundle.message.payload;\n    const replyToData = messageBundle.message.replyTo\n      ? {\n          payload: messageBundle.message.replyTo.payload,\n          author: messageBundle.message.replyTo.author,\n          id: messageBundle.message.replyTo.p2pMessageEntryHash,\n        }\n      : null;\n\n    const timestamp =\n      messageBundle.message.err === undefined && messageBundle.receipt\n        ? messageBundle.receipt!.timestamp\n        : messageBundle.message.timestamp;\n\n    const readlist = messageBundle.message.err\n      ? undefined\n      : messageBundle.receipt && messageBundle.receipt!.status === \"read\"\n      ? { key: timestamp }\n      : undefined;\n\n    if (\n      payload.type === \"FILE\" &&\n      (payload as FilePayload).fileType === \"VIDEO\" &&\n      fetchedFiles[payload.fileHash!] === undefined &&\n      messageBundle.message.err === undefined\n    ) {\n      dispatch(getFileBytes([payload.fileHash!]));\n    }\n\n    console.log(\"p2p conversant is \", conversant, \"and author is \", author);\n    return conversant.id !== author.id ? (\n      <Me\n        id={messageBundle.message.p2pMessageEntryHash}\n        profile={messageBundle.message.author}\n        key={key}\n        type=\"p2p\"\n        timestamp={timestamp}\n        onRetry={(setLoading) =>\n          onRetryHandler(setLoading, messageBundle.message)\n        }\n        onDelete={() => dispatch(removeErrMessage(messageBundle.message))}\n        payload={payload}\n        readList={readlist ? readlist : {}}\n        showProfilePicture={true}\n        showName={true}\n        onDownload={(file) => onDownloadHandler(file)}\n        replyTo={replyToData ? replyToData : undefined}\n        onReply={(message) => {\n          if (messageInputRef.current) messageInputRef?.current?.reply(message);\n          setReplyTo(message.id);\n        }}\n        onPinMessage={() => {\n          dispatch(pinMessage([messageBundle.message]));\n        }}\n        isPinned={\n          pinned[messageBundle.message.p2pMessageEntryHash] ? true : false\n        }\n        err={messageBundle.message.err}\n      />\n    ) : (\n      <Others\n        id={messageBundle.message.p2pMessageEntryHash}\n        profile={messageBundle.message.author}\n        key={key}\n        type=\"p2p\"\n        timestamp={timestamp}\n        payload={payload}\n        readList={readlist ? readlist : {}}\n        showProfilePicture={true}\n        onPinMessage={() => dispatch(pinMessage([messageBundle.message]))}\n        showName={true}\n        // TODO: enable once conductor can handle many call_remotes\n        // or once we have a better implementation.\n        onSeen={(complete) => onSeenHandler(messageBundle)}\n        // onSeen={(complete) => {}}\n        onDownload={(file) => onDownloadHandler(file)}\n        replyTo={replyToData ? replyToData : undefined}\n        onReply={(message) => {\n          if (messageInputRef.current) messageInputRef?.current?.reply(message);\n          setReplyTo(message.id);\n        }}\n        isPinned={\n          pinned[messageBundle.message.p2pMessageEntryHash] ? true : false\n        }\n      />\n    );\n  };\n\n  /* RENDER */\n  return (\n    <IonPage>\n      <ChatHeader\n        id={id}\n        pathname={pathname}\n        conversant={conversant}\n        username={username}\n      />\n      <IonContent>\n        <ChatList\n          type=\"p2p\"\n          onScrollTop={(complete) => handleOnScrollTop(complete)}\n          // onScrollBottom={(complete) => {\n          //   setTimeout(() => {\n          //     complete();\n          //   }, 2000);\n          // }}\n          ref={scrollerRef}\n          disabled={disableGetPrevious}\n        >\n          {messagesWithConversant.map((messageBundle) =>\n            displayMessage(messageBundle)\n          )}\n        </ChatList>\n      </IonContent>\n\n      <Typing profiles={Object.values(typing)}></Typing>\n\n      <MessageInput\n        ref={messageInputRef}\n        onSend={handleOnSubmit}\n        onChange={(message: string) => handleOnChange(message, conversant)}\n        onFileSelect={(files) => setFiles(files)}\n      />\n    </IonPage>\n  );\n};\n\nexport default Chat;\n","/home/holo/Desktop/rsm/kizuna/ui/src/components/UpdateAvatar/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/index.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/Profile/ProfileMenuItems/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/ImageCropper/index.tsx",["899"],"import { IntlShape } from \"@formatjs/intl\";\nimport {\n  IonButton,\n  IonButtons,\n  IonLabel,\n  IonPage,\n  IonSpinner,\n  IonTitle,\n  useIonPopover,\n} from \"@ionic/react\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport ReactCrop, { Crop } from \"react-image-crop\";\nimport \"react-image-crop/dist/ReactCrop.css\";\nimport CropPopover from \"./CropPopover\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  src: string;\n  prevPath: string;\n  dismiss(): any;\n  onComplete(binary: Uint8Array | null): any;\n  intl: IntlShape;\n}\n\nconst ImageCropper: React.FC<Props> = ({\n  src,\n  prevPath,\n  dismiss,\n  onComplete,\n  intl,\n}) => {\n  const [crop, setCrop] = useState<Partial<Crop>>({\n    x: 0,\n    y: 0,\n    aspect: 1,\n  });\n  const [binary, setBinary] = useState<Uint8Array | null>(null);\n  const imageContainer = useRef<HTMLDivElement | null>(null);\n  const [style, setStyle] = useState({});\n\n  useEffect(() => {\n    const img = new Image();\n    img.onload = () => {\n      setTimeout(() => {\n        // mobile if innerHeight is greater than innerWidth\n\n        if (window.innerHeight >= window.innerWidth) {\n          const percentage =\n            imageContainer.current!.getBoundingClientRect().width /\n            img.naturalWidth;\n\n          if (img.naturalWidth * percentage >= img.naturalHeight * percentage)\n            setCrop((currCrop) => ({\n              ...currCrop,\n              width: percentage * img.naturalHeight,\n              height: percentage * img.naturalHeight,\n            }));\n          else\n            setCrop((currCrop) => ({\n              ...currCrop,\n              width: percentage * img.naturalWidth,\n              height: percentage * img.naturalWidth,\n            }));\n\n          if (\n            img.naturalHeight * percentage <=\n            imageContainer.current!.getBoundingClientRect().height\n          )\n            // Set to 100vw because height can never be greater than container height\n            setStyle({ width: \"100vw\" });\n          else\n            setStyle({\n              height: `calc(100vh - ${\n                header.current?.getBoundingClientRect().height\n              }px - ${footer.current?.getBoundingClientRect().height}px)`,\n              width:\n                (imageContainer.current!.getBoundingClientRect().height /\n                  img.naturalHeight) *\n                img.naturalWidth,\n            });\n        } else {\n          const percentage =\n            imageContainer.current!.getBoundingClientRect().height /\n            img.naturalHeight;\n\n          if (img.naturalWidth * percentage >= img.naturalHeight * percentage)\n            setCrop((currCrop) => ({\n              ...currCrop,\n              width: percentage * img.naturalHeight,\n              height: percentage * img.naturalHeight,\n            }));\n          else\n            setCrop((currCrop) => ({\n              ...currCrop,\n              width: percentage * img.naturalWidth,\n              height: percentage * img.naturalWidth,\n            }));\n          if (\n            img.naturalWidth * percentage <=\n            imageContainer.current!.getBoundingClientRect().width\n          )\n            setStyle({\n              height: `calc(100vh - ${\n                header.current?.getBoundingClientRect().height\n              }px - ${footer.current?.getBoundingClientRect().height}px)`,\n            });\n          else\n            setStyle({\n              width: \"100vw\",\n              height:\n                (imageContainer.current!.getBoundingClientRect().width /\n                  img.naturalWidth) *\n                img.naturalHeight,\n            });\n        }\n      }, 500);\n    };\n    img.src = src;\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const header = useRef<HTMLDivElement>(null);\n  const footer = useRef<HTMLDivElement>(null);\n\n  const onChange = (crop: number) => {\n    setCrop((currCrop) => {\n      const newCrop: Partial<Crop> = { ...currCrop };\n      \n      if (crop === 0) {\n        const { aspect: _, ...newCurrCrop } = currCrop;\n        return newCurrCrop;\n      } else {\n        const  newCurrCrop = { aspect: crop, ...currCrop};\n        return newCurrCrop;\n      }\n    });\n  };\n\n  const dismissPopover = () => dismissP();\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const [show, dismissP] = useIonPopover(CropPopover, {\n    onChange,\n    dismiss: dismissPopover,\n  });\n\n  function getCroppedImg() {\n    const canvas = document.createElement(\"canvas\");\n    const img = cropRef?.current?.imageRef?.current;\n\n    const scaleX = img ? img.naturalWidth / img.width : 0;\n    const scaleY = img ? img.naturalHeight / img.height : 0;\n    canvas.width = crop.width!;\n    canvas.height = crop.height!;\n    const ctx = canvas.getContext(\"2d\")!;\n\n    // New lines to be added\n    const pixelRatio = window.devicePixelRatio;\n    canvas.width = crop.width! * pixelRatio;\n    canvas.height = crop.height! * pixelRatio;\n    ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n    ctx.imageSmoothingQuality = \"high\";\n\n    if (img)\n      ctx.drawImage(\n        img,\n        crop.x! * scaleX,\n        crop.y! * scaleY,\n        crop.width! * scaleX,\n        crop.height! * scaleY,\n        0,\n        0,\n        crop.width!,\n        crop.height!\n      );\n    canvas.toBlob(\n      (blob) => {\n        blob?.arrayBuffer().then((v) => {\n          const binary = new Uint8Array(v);\n          setBinary(binary);\n        });\n      },\n      \"image/jpeg\",\n      1\n    );\n  }\n\n  useEffect(() => {\n    if (binary) {\n      onComplete(binary);\n      setBinary(null);\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [binary]);\n\n  const onConfirm = () => {\n    getCroppedImg();\n    dismiss();\n  };\n\n  const cropRef = useRef<ReactCrop | null>(null);\n\n  const onChangeCrop = (crop: Crop) => setCrop(crop);\n  return (\n    <IonPage>\n      <div className={styles.content}>\n        <div className={styles.header} ref={header}>\n          <IonTitle>\n            {intl.formatMessage({ id: \"components.image-cropper.label\" })}\n          </IonTitle>\n          {/* \n          <IonButton fill=\"clear\" href={prevPath}>\n            <IonIcon icon={arrowBack} />\n          </IonButton>\n\n          <IonButton fill=\"clear\" onClick={onConfirm}>\n            <IonIcon icon={checkmarkOutline} />\n          </IonButton> */}\n        </div>\n        <div className={styles[\"image-cropper\"]} ref={imageContainer}>\n          {Object.keys(style).length > 0 ? (\n            <ReactCrop\n              circularCrop\n              ref={cropRef}\n              imageStyle={{\n                // ...(Object.keys(style).length === 0 ? {} : style),\n                ...style,\n                objectFit: \"contain\",\n              }}\n              src={src}\n              onChange={onChangeCrop}\n              keepSelection={true}\n              crop={crop}\n            />\n          ) : (\n            <IonSpinner></IonSpinner>\n          )}\n        </div>\n      </div>\n      <div className={styles.footer} ref={footer}>\n        <IonButtons>\n          <IonButton href={prevPath} fill=\"outline\" color=\"danger\">\n            <IonLabel>\n              {intl.formatMessage({ id: \"components.image-cropper.cancel\" })}\n            </IonLabel>\n          </IonButton>\n          <IonButton onClick={onConfirm} fill=\"solid\" color=\"success\">\n            <IonLabel>\n              {intl.formatMessage({ id: \"components.image-cropper.confirm\" })}\n            </IonLabel>\n          </IonButton>\n        </IonButtons>\n      </div>\n      {/* <IonFooter ref={footer}>\n        <IonToolbar>\n          <IonButtons>\n            <IonButton onClick={onCrop}>\n              <IonIcon icon={scanOutline}></IonIcon>\n            </IonButton>\n          </IonButtons>\n        </IonToolbar>\n      </IonFooter> */}\n    </IonPage>\n  );\n};\n\nexport default ImageCropper;\n","/home/holo/Desktop/rsm/kizuna/ui/src/components/Identicon/index.tsx",["900","901","902","903"],"import renderIcon from \"@holo-host/identicon\";\nimport { deserializeHash } from \"@holochain-open-dev/core-types\";\nimport { IonAvatar, IonIcon, IonImg } from \"@ionic/react\";\nimport { personCircle, personCircleOutline } from \"ionicons/icons\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  hash: string;\n  size?: number | undefined;\n  avatar?: string;\n  shape?: \"circle\" | \"square\";\n  className?: string;\n}\n\nconst Identicon: React.FC<Props> = ({\n  hash,\n  size = 32,\n  className = \"\",\n  avatar = undefined,\n}) => {\n  // const canvas = document.getElementById(styles.icon) as HTMLCanvasElement;\n  const canvas = useRef<HTMLCanvasElement>(null);\n  const opts = {\n    hash: deserializeHash(hash),\n    size,\n  };\n  useEffect(() => {\n    if (canvas.current) renderIcon(opts, canvas.current);\n  });\n  return (\n    <div>\n      {!avatar ? (\n        // <canvas\n        //   ref={canvas}\n        //   className={`${styles[\"icon\"]} ${className}`}\n        //   id=\"identicon\"\n        //   width={size}\n        //   height={size}\n        // />\n        // <IonAvatar className={styles[\"avatar\"]}>\n        <IonImg\n          src=\"assets/icon/person-circle-outline.svg\"\n          alt=\"avatar\"\n          className={`${styles[\"icon\"]} ${className}`}\n        />\n      ) : (\n        // </IonAvatar>\n        <IonAvatar className={styles[\"avatar\"]}>\n          <img src={avatar} alt=\"avatar\"></img>\n        </IonAvatar>\n      )}\n    </div>\n  );\n};\n\nexport default Identicon;\n","/home/holo/Desktop/rsm/kizuna/ui/src/components/ProfileInfo/index.tsx",["904"],"import { IonItem, IonItemGroup, IonText } from \"@ionic/react\";\nimport React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport Identicon from \"../Identicon\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  nickname: string;\n  id: string;\n}\n\nconst ProfileInfo: React.FC<Props> = ({ nickname, id }) => {\n  console.log(\"this is profile info\", nickname, id);\n  const intl = useIntl();\n  const trimmedId = id.slice(5);\n\n  return (\n    <>\n      <IonItemGroup className={styles[\"container\"]}>\n        <IonItem lines=\"none\">\n          <h3>\n            {intl.formatMessage({ id: \"components.profile-info.nickname\" })}\n          </h3>\n        </IonItem>\n\n        <IonItem lines=\"none\">\n          <IonText>{nickname}</IonText>\n        </IonItem>\n\n        <IonItem lines=\"none\">\n          <h3>{intl.formatMessage({ id: \"components.profile-info.id\" })}</h3>\n        </IonItem>\n\n        <IonItem lines=\"none\">\n          <IonText>{trimmedId}</IonText>\n        </IonItem>\n\n        {/* <IonItem lines=\"none\">\n          <h3>\n            {intl.formatMessage({ id: \"components.profile-info.identicon\" })}\n          </h3>\n        </IonItem>\n        <IonItem className={styles[\"avatar\"]} lines=\"none\">\n          <Identicon hash={id} size={40} />\n        </IonItem> */}\n      </IonItemGroup>\n    </>\n  );\n};\n\nexport default ProfileInfo;\n","/home/holo/Desktop/rsm/kizuna/ui/src/app/Settings/SettingsHeader/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/Settings/LanguageDropdown/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/Settings/Preference/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/Input/HomeInput/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/NewConversation/SelectedContactsHeader/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/NewConversation/NewConversationHeader/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/fetchPinnedMessages.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/NewConversation/ContactList/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/MessageInput/index.tsx",["905","906","907","908"],"import {\n  IonButton,\n  IonButtons,\n  IonFooter,\n  IonIcon,\n  IonTextarea,\n  IonToolbar,\n  IonPopover,\n  useIonPopover,\n  IonContent,\n} from \"@ionic/react\";\nimport { attachOutline, happyOutline } from \"ionicons/icons\";\nimport React, {\n  forwardRef,\n  ForwardRefRenderFunction,\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useMemo,\n  useRef,\n  useState,\n} from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { useToast } from \"../../containers/ToastContainer/context\";\nimport { Payload } from \"../../redux/commons/types\";\nimport EndButtons from \"./EndButtons\";\nimport FileView from \"./FileView\";\nimport ReplyView from \"./ReplyView\";\nimport GifKeyboard from \"../Gif/GifKeyboard\";\nimport EmojiPicker from \"../EmojiPicker\";\nimport styles from \"./style.module.css\";\n\nexport interface FileContent {\n  metadata: {\n    fileName: string;\n    fileType: \"VIDEO\" | \"IMAGE\" | \"OTHER\";\n    fileSize: number;\n  };\n  fileType: {\n    type: \"VIDEO\" | \"IMAGE\" | \"OTHER\";\n    payload?: { thumbnail: Uint8Array };\n  };\n  fileBytes: Uint8Array;\n}\n\nexport interface MessageInputOnSendParams {\n  message?: string;\n  files?: FileContent[];\n  reply?: string;\n  setIsLoading: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\nexport interface ReplyParams {\n  payload: Payload;\n  author: string;\n  id: string;\n}\n\ninterface Props {\n  onChange?: (message: string) => any;\n  onSend?: (opt?: MessageInputOnSendParams) => any;\n  onFileSelect?: (e: FileContent[]) => any;\n}\n\nexport interface MessageInputMethods {\n  reply: (message: { payload: Payload; author: string; id: string }) => any;\n}\n\nconst determineFileType = (type: string): \"VIDEO\" | \"IMAGE\" | \"OTHER\" => {\n  // too lazy to do all\n  // url: https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types/Common_types\n\n  switch (type) {\n    case \"video/mpeg\":\n    case \"video/mp4\":\n      return \"VIDEO\";\n    case \"image/png\":\n    case \"image/jpeg\":\n      return \"IMAGE\";\n    default:\n      return \"OTHER\";\n  }\n};\n\nconst MessageInput: ForwardRefRenderFunction<MessageInputMethods, Props> = (\n  { onChange, onSend, onFileSelect },\n  ref\n) => {\n  const [message, setMessage] = useState(\"\");\n  const handleOnChange = (e: CustomEvent) => setMessage(e.detail.value!);\n  const intl = useIntl();\n  const [isReply, setIsReply] = useState<ReplyParams | undefined>(undefined);\n  const [loading, setLoading] = useState<boolean>(false);\n  const [onComposition, setOnComposition] = useState<boolean>(false);\n  const file = useRef<HTMLInputElement>(null);\n  const [files, setFiles] = useState<FileContent[]>([]);\n  const [selectedGif, setSelectedGif] = useState(\"\");\n  const [selectedEmoji, setSelectedEmoji] = useState({});\n  const handleOnFileClick = () => file?.current?.click();\n\n  const [showGifs, setShowGifs] = useState<boolean>(false);\n  const [showEmoji, setShowEmoji] = useState<boolean>(false);\n\n  const onFileSelectCallback = useCallback(() => {\n    if (onFileSelect) onFileSelect(files);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [files]);\n\n  useImperativeHandle(ref, () => ({\n    reply: (message: any) => {\n      setIsReply(message);\n    },\n  }));\n\n  const onChangeCallback = useCallback(() => {\n    if (onChange) onChange(message);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [message]);\n\n  const onGifSelectCallback = useCallback(() => {\n    if (onSend && selectedGif !== \"\") {\n      onSend({\n        message: selectedGif,\n        // reply: isReply?.id,\n        setIsLoading: setLoading,\n      });\n      setShowGifs(!showGifs);\n      reset();\n    }\n  }, [selectedGif]);\n\n  const reset = () => {\n    setIsReply(undefined);\n    setMessage(\"\");\n    setFiles([]);\n    if (file.current) file.current!.value = \"\";\n  };\n\n  const handleOnGifClick = () => {\n    setShowGifs(!showGifs);\n    if (!showGifs === true && showEmoji === true) {\n      setShowEmoji(!showEmoji);\n    }\n  };\n\n  const handleOnEmojiClick = () => {\n    setShowEmoji(!showEmoji);\n    if (!showEmoji === true && showGifs === true) {\n      setShowGifs(!showEmoji);\n    }\n  };\n\n  const handleOnGifSelect = (url: string) => {\n    setSelectedGif(url);\n  };\n\n  const handleOnEmojiSelect = (emoji: any) => {\n    console.log(emoji);\n    setSelectedEmoji(emoji);\n    setMessage(message + emoji.emoji);\n  };\n\n  const handleComposition = (event: CompositionEvent) => {\n    if (event.type === \"compositionstart\") {\n      setOnComposition(true);\n    }\n    if (event.type === \"compositionend\") {\n      setOnComposition(false);\n    }\n  };\n\n  const onKeyDown = (event: KeyboardEvent) => {\n    if (onSend && event.key === \"Enter\" && !event.shiftKey && !onComposition) {\n      if (message.trim().length !== 0 || files.length > 0) {\n        onSend({\n          files,\n          message,\n          reply: isReply?.id,\n          setIsLoading: setLoading,\n        });\n        reset();\n      }\n    }\n  };\n  useEffect(() => {\n    document.addEventListener(\"keydown\", onKeyDown);\n\n    return () => {\n      document.removeEventListener(\"keydown\", onKeyDown);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [onSend, reset]);\n  useEffect(() => onFileSelectCallback(), [files, onFileSelectCallback]);\n  useEffect(() => onChangeCallback(), [message, onChangeCallback]);\n  useEffect(() => onGifSelectCallback(), [selectedGif, onGifSelectCallback]);\n  const { showToast } = useToast();\n\n  const handleOnFileChange = () => {\n    Array.from(file.current ? file.current.files! : new FileList()).forEach(\n      (file) => {\n        file.arrayBuffer().then((arrBuffer) => {\n          const fileSize = file.size;\n          const fileName = file.name;\n          // 15mb = 15728640b, file.size is of type bytes\n          if (fileSize < 15728640) {\n            const fileBytes = new Uint8Array(arrBuffer);\n            const type = determineFileType(file.type);\n            if (type === \"IMAGE\") {\n              const encoder = new TextEncoder();\n              const reader = new FileReader();\n\n              reader.readAsDataURL(file);\n              reader.onload = (readerEvent) => {\n                const encoded = encoder.encode(\n                  readerEvent.target?.result as string\n                );\n\n                const final = {\n                  metadata: { fileName, fileType: type, fileSize },\n                  fileType: { type, payload: { thumbnail: encoded } },\n                  fileBytes,\n                };\n\n                setFiles((currFiles) => {\n                  currFiles.push(final);\n                  return [...currFiles];\n                });\n              };\n            } else if (type === \"VIDEO\") {\n              const video = document.createElement(\"video\");\n              // const canvas = document.createElement(\"canvas\");\n              const url = URL.createObjectURL(\n                new Blob([fileBytes], { type: \"video/mp4\" })\n              );\n              const BASE_64 = \";base64,\";\n\n              const timeUpdate = function () {\n                if (snapImage()) {\n                  video.removeEventListener(\"timeupdate\", timeUpdate);\n                  video.pause();\n                }\n              };\n\n              const snapImage = (): boolean => {\n                const canvas = document.createElement(\"canvas\");\n                canvas.width = video.videoWidth;\n                canvas.height = video.videoHeight;\n                canvas\n                  .getContext(\"2d\")\n                  ?.drawImage(video, 0, 0, canvas.width, canvas.height);\n\n                const image = canvas.toDataURL(\"image/jpeg\");\n\n                const success = image.length > 10;\n                if (success) {\n                  const img = document.createElement(\"img\");\n\n                  document.getElementsByTagName(\"div\")[0].appendChild(img);\n                  URL.revokeObjectURL(url);\n\n                  const base64 = image.split(BASE_64)[1]?.trim();\n                  if (base64) {\n                    const byteCharacters = window.atob(\n                      image.split(BASE_64)[1]?.trim()\n                    );\n\n                    const byteNumbers = new Array(byteCharacters.length);\n                    for (let i = 0; i < byteCharacters.length; i++)\n                      byteNumbers[i] = byteCharacters.charCodeAt(i);\n\n                    const uArr = new Uint8Array(byteNumbers);\n\n                    // });\n                    const final = {\n                      metadata: { fileName, fileType: type, fileSize },\n                      fileType: {\n                        type,\n                        payload: { thumbnail: uArr },\n                      },\n                      fileBytes,\n                    };\n\n                    setFiles((currFiles) => {\n                      currFiles.push(final);\n                      return [...currFiles];\n                    });\n                  }\n                }\n\n                return success;\n              };\n\n              video.src = url;\n              video.addEventListener(\"timeupdate\", timeUpdate);\n              video.preload = \"metadata\";\n              video.muted = true;\n              video.play();\n            } else {\n              const final = {\n                metadata: { fileName, fileType: type, fileSize },\n                fileType: { type },\n                fileBytes,\n              };\n              setFiles((currFiles) => {\n                currFiles.push(final);\n                return [...currFiles];\n              });\n            }\n          } else\n            showToast({\n              message: intl.formatMessage(\n                {\n                  id: \"components.message-input.over-size-limit\",\n                },\n                { fileName }\n              ),\n              color: \"danger\",\n              duration: 2500,\n            });\n        });\n      }\n    );\n  };\n\n  const renderFileView = useMemo(\n    () =>\n      files.length > 0 ? (\n        <FileView file={file.current} files={files} setFiles={setFiles} />\n      ) : null,\n    [files]\n  );\n\n  const [presentEmojiPicker, dismissEmojiPicker] = useIonPopover(\n    <EmojiPicker onSelect={handleOnEmojiSelect} />,\n    {\n      onHide: () => dismissEmojiPicker,\n    }\n  );\n\n  return (\n    <>\n      <IonFooter>\n        {showGifs ? <GifKeyboard onSelect={handleOnGifSelect} /> : null}\n        {showEmoji ? (\n          <IonPopover isOpen={showEmoji}>\n            <EmojiPicker onSelect={handleOnEmojiSelect} />{\" \"}\n          </IonPopover>\n        ) : null}\n        {isReply ? <ReplyView messageState={[isReply, setIsReply]} /> : null}\n        {renderFileView}\n        <IonToolbar className={styles.toolbar}>\n          <IonButtons slot=\"start\">\n            {files.length > 0 ? null : (\n              <IonButton onClick={handleOnFileClick}>\n                <IonIcon color=\"medium\" icon={attachOutline} />\n              </IonButton>\n            )}\n            <IonButton onClick={handleOnGifClick}>\n              <IonIcon color=\"medium\" icon=\"assets/icon/gif.svg\" />\n            </IonButton>\n            <IonButton\n              // onClick={handleOnEmojiClick}\n              onClick={(e) => presentEmojiPicker({ event: e.nativeEvent })}\n            >\n              <IonIcon color=\"medium\" icon={happyOutline} />\n            </IonButton>\n          </IonButtons>\n          <IonTextarea\n            value={message}\n            onKeyDown={(event) => {\n              if (event.key === \"Enter\" && !event.shiftKey) {\n                // prevent default behavior\n                event.preventDefault();\n                //alert(\"ok\");\n                return false;\n              }\n            }}\n            className={styles[\"textarea\"]}\n            onIonChange={handleOnChange}\n            autoGrow={true}\n            placeholder={intl.formatMessage({\n              id: \"app.new-conversation.message-placeholder\",\n            })}\n            ref={(el) => {\n              if (el) {\n                el.addEventListener(\"compositionstart\", handleComposition);\n                el.addEventListener(\"compositionend\", handleComposition);\n              }\n            }}\n          />\n          <EndButtons\n            files={files}\n            onSend={() => {\n              if (onSend) {\n                onSend({\n                  files,\n                  message,\n                  reply: isReply?.id,\n                  setIsLoading: setLoading,\n                });\n              }\n              reset();\n            }}\n            message={message}\n            loading={loading}\n          />\n        </IonToolbar>\n      </IonFooter>\n      <input ref={file} type=\"file\" hidden onChange={handleOnFileChange} />\n    </>\n  );\n};\n\nexport default forwardRef(MessageInput);\n","/home/holo/Desktop/rsm/kizuna/ui/src/app/GroupChat/GroupSearch/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/GroupChat/GroupPinnedMessages/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/getFileBytes.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/getPinnedMessages.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/getPreviousMessages.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/isTyping.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/helpers/getP2PState.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/readMessage.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/removeErrMessage.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/pinMessage.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/GroupChat/GroupChatDetails/index.tsx",["909"],"import { deserializeHash, serializeHash } from \"@holochain-open-dev/core-types\";\nimport {\n  IonButton,\n  IonButtons,\n  IonContent,\n  IonHeader,\n  IonIcon,\n  IonLoading,\n  IonModal,\n  IonPage,\n  IonSlide,\n  IonSlides,\n  IonText,\n  IonTitle,\n  IonToolbar,\n  useIonModal,\n} from \"@ionic/react\";\nimport {\n  arrowBackSharp,\n  imageOutline,\n  peopleCircleOutline,\n} from \"ionicons/icons\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport { useSelector } from \"react-redux\";\nimport { useHistory, useParams } from \"react-router\";\nimport ImageCropper from \"../../../components/ImageCropper\";\nimport FileBox from \"../../../components/Slides/FileBox\";\nimport MediaBox from \"../../../components/Slides/MediaBox\";\nimport { FetchPayloadType, FilePayload } from \"../../../redux/commons/types\";\nimport {\n  fetchFilesBytes,\n  getPreviousGroupMessages,\n  updateGroupAvatar,\n  updateGroupName,\n} from \"../../../redux/group/actions\";\nimport { GroupMessage } from \"../../../redux/group/types\";\nimport { RootState } from \"../../../redux/types\";\nimport { binaryToUrl } from \"../../../utils/services/ConversionService\";\nimport { useAppDispatch } from \"../../../utils/services/ReduxService\";\nimport EndButtons from \"./EndButtons\";\nimport Members from \"./Members\";\n// Components\nimport SegmentTabs from \"./SegmentTabs\";\nimport styles from \"./style.module.css\";\nimport UpdateGroupName from \"./UpdateGroupName\";\n\ninterface GroupChatParams {\n  group: string;\n}\n\nconst GroupChatDetails: React.FC = () => {\n  const intl = useIntl();\n  const history = useHistory();\n  const { group } = useParams<GroupChatParams>();\n  const dispatch = useAppDispatch();\n\n  const slideOpts = {\n    initialSlide: 0,\n    speed: 400,\n  };\n\n  const groupData = useSelector(\n    (state: RootState) => state.groups.conversations[group]\n  );\n\n  const myProfile = useSelector((state: RootState) => state.profile);\n  const { conversations, messages } = useSelector(\n    (state: RootState) => state.groups\n  );\n  const others = useSelector((state: RootState) => state.groups.groupFiles);\n\n  /* Local state */\n  const [editGroupName, setEditGroupName] = useState<boolean>(false);\n  const [showModal, setShowModal] = useState<boolean>(false);\n  const [media] = useState<{ [key: string]: boolean }>({});\n  const [files] = useState<{ [key: string]: boolean }>({});\n  const [orderedMedia] = useState<GroupMessage[]>([]);\n  const [orderedFiles] = useState<GroupMessage[]>([]);\n  const [currentSegment, setCurrentSegment] = useState<string>(\"Info\");\n  const [name, setName] = useState<string>(\"\");\n\n  /* Refs */\n  const slideRef = useRef<HTMLIonSlidesElement>(null);\n\n  /* Handlers */\n  const handleOnBack = () => {\n    history.goBack();\n  };\n\n  const handleOnClickEdit = () => {\n    setEditGroupName(editGroupName ? false : true);\n    setShowModal(showModal ? false : true);\n  };\n\n  /*\n    changes which slide is displayed\n    when clicking on a segment\n  */\n  const handleOnSegmentChange = (value: string) => {\n    var index;\n    switch (value) {\n      case \"Info\":\n        index = 0;\n        break;\n      case \"Media\":\n        index = 1;\n        break;\n      case \"Files\":\n        index = 2;\n        break;\n      default:\n        index = 0;\n    }\n    slideRef.current?.slideTo(index);\n  };\n\n  /*\n    changes which segment is highlighted\n    when the slide is changed\n  */\n  const handleSlideChange = () => {\n    const segmentValues = [\"Info\", \"Media\", \"Files\"];\n    slideRef.current\n      ?.getActiveIndex()\n      .then((currentIndex) => setCurrentSegment(segmentValues[currentIndex]));\n  };\n\n  /*\n    Handler for update of GroupName\n  */\n  const handleOnSave = (newGroupName: string) => {\n    dispatch(\n      updateGroupName({\n        name: newGroupName,\n        groupId: groupData!.originalGroupId,\n        groupRevisionId: groupData!.originalGroupRevisionId,\n      })\n    ).then((res: any) => {\n      if (res) {\n        setName(\"\");\n        setShowModal(false);\n      }\n    });\n  };\n\n  const handleOnDownload = (file: FilePayload) => {\n    others[file.fileHash!] !== undefined\n      ? downloadFile(others[file.fileHash!], file.fileName)\n      : dispatch(fetchFilesBytes([file.fileHash!])).then(\n          (res: { [key: string]: Uint8Array }) => {\n            if (res && Object.keys(res).length > 0) {\n              downloadFile(res[file.fileHash!], file.fileName);\n            }\n          }\n        );\n  };\n  const downloadFile = (fileBytes: Uint8Array, fileName: string) => {\n    const blob = new Blob([fileBytes]); // change resultByte to bytes\n    const link = document.createElement(\"a\");\n    link.href = window.URL.createObjectURL(blob);\n    link.download = fileName;\n    link.click();\n  };\n\n  const handleOnScrollBottom = (\n    complete: () => Promise<void>,\n    earliestMediaOrFile: any,\n    type: FetchPayloadType\n  ) => {\n    let earliest: GroupMessage = earliestMediaOrFile;\n\n    if (earliest !== undefined) {\n      dispatch(\n        getPreviousGroupMessages({\n          groupId: group,\n          lastFetched: earliest.groupMessageId,\n          lastMessageTimestamp: earliest.timestamp,\n          batchSize: 5,\n          payloadType: type,\n        })\n      ).then((res: any) => {\n        complete();\n      });\n    }\n    return;\n  };\n\n  /* UseEffects */\n  // sort others\n  useEffect(() => {\n    if (conversations[group] !== undefined) {\n      conversations[group].messages.forEach((messageID: string) => {\n        let message = messages[messageID];\n        if (message && message.payload.type === \"FILE\") {\n          let type = message.payload.fileType;\n\n          // checks for and does not allow duplicates\n          // not clear when this happens\n          switch (type) {\n            case \"IMAGE\":\n              if (!media[message.groupMessageId]) {\n                media[message.groupMessageId] = true;\n                orderedMedia.push(message);\n              }\n              break;\n            case \"VIDEO\":\n              if (!media[message.groupMessageId]) {\n                media[message.groupMessageId] = true;\n                orderedMedia.push(message);\n              }\n              break;\n            case \"OTHER\":\n              if (!files[message.groupMessageId]) {\n                files[message.groupMessageId] = true;\n                orderedFiles.push(message);\n              }\n              break;\n            default:\n              break;\n          }\n        }\n      });\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [conversations, messages]);\n\n  /* fetch 40 media */\n  useEffect(() => {\n    dispatch(\n      getPreviousGroupMessages({\n        groupId: group,\n        batchSize: 40,\n        payloadType: {\n          type: \"MEDIA\",\n          payload: null,\n        },\n      })\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  /* fetch 40 Files */\n  useEffect(() => {\n    dispatch(\n      getPreviousGroupMessages({\n        groupId: group,\n        batchSize: 40,\n        payloadType: {\n          type: \"FILE\",\n          payload: null,\n        },\n      })\n    );\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const file = useRef<HTMLInputElement>(null);\n  const [binary, setBinary] = useState<null | Uint8Array>(null);\n  const groupPicture = useRef<HTMLImageElement>(null);\n\n  const decodeSrc = () => {\n    const decoder = new TextDecoder();\n\n    return binary ? decoder.decode(binary) : \"\";\n  };\n\n  const onDismiss = () => {\n    setBinary(null);\n    dismiss();\n  };\n\n  const [present, dismiss] = useIonModal(ImageCropper, {\n    src: decodeSrc(),\n    prevPath: \"/register\",\n    dismiss: onDismiss,\n    onComplete: (binary: Uint8Array) => {\n      if (binary) {\n        const blob = new Blob([binary], { type: \"image/jpeg\" });\n        dispatch(\n          updateGroupAvatar({\n            avatar: serializeHash(binary),\n            groupId: groupData!.originalGroupId,\n            groupRevisionId: groupData!.originalGroupRevisionId,\n          })\n        );\n        groupPicture.current!.src = URL.createObjectURL(blob);\n        // setBinary(binary);\n      }\n    },\n    intl,\n  });\n\n  const handleOnFileChange = () => {\n    Array.from(file.current ? file.current.files! : new FileList()).forEach(\n      (file) => {\n        file.arrayBuffer().then((arrBuffer) => {\n          const fileSize = file.size;\n          // const fileName = file.name;\n          // 15mb = 15728640b, file.size is of type bytes\n          if (fileSize < 15728640) {\n            const encoder = new TextEncoder();\n            const reader = new FileReader();\n\n            reader.readAsDataURL(file);\n            reader.onload = (readerEvent) => {\n              const encoded = encoder.encode(\n                readerEvent.target?.result as string\n              );\n\n              setBinary(encoded);\n            };\n          }\n        });\n      }\n    );\n  };\n\n  useEffect(() => {\n    if (binary) present({ cssClass: `cropper ${styles.modal}` });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [binary]);\n\n  const renderGroupAvatar = () => {\n    if (groupData.creator === myProfile.id) {\n      return (\n        <div className={styles[\"avatar-container\"]}>\n          {/* <UpdateAvatar\n                imageRef={groupPicture}\n                onChange={() => {}}\n              ></UpdateAvatar> */}\n          <div className={styles[\"avatar-content\"]}>\n            <div className={styles[\"avatar\"]}>\n              <div className={styles[\"image-container\"]}>\n                {groupData.avatar ? (\n                  <img\n                    ref={groupPicture}\n                    alt={groupData.name}\n                    src={binaryToUrl(groupData.avatar)}\n                  />\n                ) : (\n                  <img\n                    ref={groupPicture}\n                    alt={groupData.name}\n                    src={peopleCircleOutline}\n                    className={styles.img}\n                  ></img>\n                )}\n              </div>\n              <div\n                onClick={() => file.current?.click()}\n                className={styles.overlay}\n              >\n                <IonText className=\"ion-text-center\">\n                  {intl.formatMessage({\n                    id: \"app.group-chat.change-avatar\",\n                  })}\n                </IonText>\n              </div>\n            </div>\n            <div className={styles[\"icon-overlay\"]}>\n              <IonIcon size=\"large\" icon={imageOutline}></IonIcon>\n            </div>\n          </div>\n          <input\n            ref={file}\n            type=\"file\"\n            hidden\n            accept=\"image/png, image/jpeg\"\n            onChange={handleOnFileChange}\n          />\n        </div>\n      );\n    } else {\n      return (\n        <div className={styles[\"avatar-container\"]}>\n          {/* <UpdateAvatar\n                imageRef={groupPicture}\n                onChange={() => {}}\n              ></UpdateAvatar> */}\n          <div className={styles[\"avatar-content\"]}>\n            <div className={styles[\"avatar\"]}>\n              <div className={styles[\"image-container\"]}>\n                {groupData.avatar ? (\n                  <img\n                    ref={groupPicture}\n                    alt={groupData.name}\n                    src={binaryToUrl(groupData.avatar)}\n                  />\n                ) : (\n                  <img\n                    ref={groupPicture}\n                    alt={groupData.name}\n                    src={peopleCircleOutline}\n                    className={styles.img}\n                  ></img>\n                )}\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n  };\n\n  return (\n    <>\n      {groupData ? (\n        <IonPage>\n          <IonHeader className={styles.header}>\n            <IonToolbar>\n              <IonButtons>\n                <IonButton\n                  onClick={() => handleOnBack()}\n                  className=\"ion-no-padding\"\n                >\n                  <IonIcon slot=\"icon-only\" icon={arrowBackSharp} />\n                </IonButton>\n              </IonButtons>\n              <EndButtons\n                onClickEdit={() => handleOnClickEdit()}\n                onClickNotif={() => {}}\n                disabled={groupData.creator !== myProfile.id ? true : false}\n              />\n            </IonToolbar>\n            {renderGroupAvatar()}\n            <IonTitle className={styles.groupname}>{groupData!.name}</IonTitle>\n\n            <SegmentTabs\n              value={currentSegment}\n              onSegmentChange={handleOnSegmentChange}\n            />\n          </IonHeader>\n\n          <IonContent>\n            <IonSlides\n              ref={slideRef}\n              className=\"slides\"\n              pager={false}\n              options={slideOpts}\n              onIonSlideDidChange={handleSlideChange}\n            >\n              <IonSlide>\n                <Members\n                  groupId={group}\n                  groupRevisionId={groupData!.originalGroupRevisionId}\n                />\n              </IonSlide>\n\n              <IonSlide>\n                {/* <Media groupId={group} /> */}\n                <MediaBox\n                  orderedMediaMessages={orderedMedia}\n                  onDownload={(file: FilePayload) => handleOnDownload(file)}\n                  onScrollBottom={(complete, earliestMedia) =>\n                    handleOnScrollBottom(complete, earliestMedia, {\n                      type: \"MEDIA\",\n                      payload: null,\n                    })\n                  }\n                />\n              </IonSlide>\n\n              <IonSlide>\n                {/* <File groupId={group} /> */}\n                <FileBox\n                  orderedFileMessages={orderedFiles}\n                  onDownload={(file: FilePayload) => handleOnDownload(file)}\n                  onScrollBottom={(complete, earliestFile) =>\n                    handleOnScrollBottom(complete, earliestFile, {\n                      type: \"FILE\",\n                      payload: null,\n                    })\n                  }\n                />\n              </IonSlide>\n            </IonSlides>\n          </IonContent>\n\n          <IonModal isOpen={showModal} cssClass=\"my-custom-modal-css\">\n            <UpdateGroupName\n              setName={setName}\n              name={name}\n              onCancel={() => setShowModal(false)}\n              onSave={(newGroupName) => handleOnSave(newGroupName)}\n            />\n          </IonModal>\n        </IonPage>\n      ) : (\n        <IonLoading isOpen={true} />\n      )}\n    </>\n  );\n};\n\nexport default GroupChatDetails;\n","/home/holo/Desktop/rsm/kizuna/ui/src/app/Conversations/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/Contacts/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/Blocked/EmptyBlocked/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/ContactList/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/Chat/ChatSearch/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/Chat/ChatPinnedMessages/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/Chat/ChatDetails/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/GroupChat/GroupChatHeader.tsx",["910"],"import { deserializeHash } from \"@holochain-open-dev/core-types\";\nimport {\n  IonAvatar,\n  IonButton,\n  IonButtons,\n  IonHeader,\n  IonIcon,\n  IonItem,\n  IonLabel,\n  IonList,\n  IonTitle,\n  IonToolbar,\n  useIonPopover,\n} from \"@ionic/react\";\nimport {\n  arrowBackSharp,\n  ellipsisVerticalOutline,\n  informationCircleOutline,\n  peopleCircleOutline,\n  pinOutline,\n  search,\n} from \"ionicons/icons\";\nimport React from \"react\";\nimport { IntlShape, useIntl } from \"react-intl\";\nimport { useHistory } from \"react-router\";\nimport { GroupConversation } from \"../../redux/group/types\";\nimport { binaryToUrl } from \"../../utils/services/ConversionService\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  groupData: GroupConversation;\n}\n\ninterface MenuListProps {\n  onHide(): void;\n  groupData: GroupConversation;\n  history: any;\n  intl: IntlShape;\n}\n\nconst GroupChatMenuList: React.FC<MenuListProps> = ({\n  groupData,\n  history,\n  onHide,\n  intl,\n}) => {\n  return (\n    <IonList>\n      <IonItem\n        button\n        onClick={() => {\n          onHide();\n          history.push(`/g/${groupData.originalGroupId}/details`);\n        }}\n      >\n        <IonIcon slot=\"start\" icon={informationCircleOutline}></IonIcon>\n        <IonLabel>\n          {intl.formatMessage({ id: \"app.group-chat.header-details\" })}\n        </IonLabel>\n      </IonItem>\n\n      <IonItem\n        onClick={() => {\n          history.push({ pathname: `/g/${groupData.originalGroupId}/search` });\n          onHide();\n        }}\n        button\n      >\n        <IonIcon slot=\"start\" icon={search}></IonIcon>\n        <IonLabel>\n          {intl.formatMessage({ id: \"app.group-chat.header-search\" })}\n        </IonLabel>\n      </IonItem>\n\n      <IonItem\n        onClick={() => {\n          history.push({ pathname: `/g/${groupData.originalGroupId}/pinned` });\n          onHide();\n        }}\n        button\n      >\n        <IonIcon slot=\"start\" icon={pinOutline}></IonIcon>\n        <IonLabel>\n          {intl.formatMessage({ id: \"app.group-chat.header-pinned-message\" })}\n        </IonLabel>\n      </IonItem>\n    </IonList>\n  );\n};\n\nconst GroupChatHeader: React.FC<Props> = ({ groupData }) => {\n  const history = useHistory();\n  const intl = useIntl();\n\n  const [present, dismiss] = useIonPopover(GroupChatMenuList, {\n    onHide: () => dismiss(),\n    groupData,\n    history,\n    intl,\n  });\n\n  return (\n    <IonHeader>\n      <IonToolbar>\n        <IonButtons slot=\"start\">\n          <IonButton\n            onClick={() => history.push({ pathname: `/home` })}\n            className=\"ion-no-padding\"\n          >\n            <IonIcon slot=\"icon-only\" icon={arrowBackSharp} />\n          </IonButton>\n        </IonButtons>\n        <div className={styles[\"title-container\"]}>\n          <IonAvatar className=\"ion-padding\">\n            {/* TODO: proper picture for default avatar if none is set */}\n            {/* TODO: Display an actual avatar set by the group creator */}\n            {groupData.avatar ? (\n              <img\n                src={binaryToUrl(groupData.avatar)}\n                alt={groupData!.name}\n              ></img>\n            ) : (\n              <img\n                className={styles[\"avatar\"]}\n                src={peopleCircleOutline}\n                alt={groupData!.name}\n              />\n            )}\n          </IonAvatar>\n\n          <IonTitle className={styles[\"title\"]}>{groupData!.name}</IonTitle>\n        </div>\n\n        <IonButtons slot=\"end\">\n          <IonButton onClick={(e) => present({ event: e.nativeEvent })}>\n            <IonIcon icon={ellipsisVerticalOutline}></IonIcon>\n          </IonButton>\n        </IonButtons>\n      </IonToolbar>\n    </IonHeader>\n  );\n};\n\nexport default GroupChatHeader;\n","/home/holo/Desktop/rsm/kizuna/ui/src/app/Chat/ChatHeader.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/getBadgeCount.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/addMembers.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/getAdjacentGroupMessages.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/getLatestGroupVersion.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/createGroup.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/getSubsequentGroupMessages.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/getMessagesByGroupByTimestamp.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/readGroupMessage.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/getPreviousGroupMessages.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/getMessagesWithProfile.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/indicateGroupTyping.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/sendInitialGroupMessage.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/removeMembers.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/setFilesBytes.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/sendGroupMessage.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/removeErrGroupMessage.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/setErrGroupMessage.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/updateGroupName.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/updateGroupAvatar.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/ImageCropper/CropPopover.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/fetchMembers.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/getPinnedMessages.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/countUnread.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/p2pmessages/actions/getMessagesByAgentByTimestamp.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/NewConversation/ContactList/IndexSection.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/GroupChat/ChatBox/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/Chat/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/Chat/Typing/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/Contacts/AddContact/AddContactModal.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/Contacts/AddContact/AddContactFAB.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/preference/actions/index.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/Profile/ProfilePopover/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/unpinMessage.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/group/actions/pinMessage.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/MessageInput/EndButtons/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/EmojiPicker/index.tsx",["911","912"],"import React from \"react\";\nimport Picker from \"emoji-picker-react\";\nimport { IonContent } from \"@ionic/react\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  onSelect: (emoji: any) => any;\n}\n\nconst EmojiPicker: React.FC<Props> = ({ onSelect }) => {\n  const onEmojiClick = (event: any, emojiObject: any) => {\n    onSelect(emojiObject);\n  };\n\n  return (\n    // <IonContent className={styles[\"popover\"]}>\n\n    <Picker\n      native={true}\n      pickerStyle={{ width: \"auto\" }}\n      onEmojiClick={onEmojiClick}\n      preload={true}\n    />\n    // </IonContent>\n  );\n};\n\nexport default EmojiPicker;\n","/home/holo/Desktop/rsm/kizuna/ui/src/components/MessageInput/ReplyView/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/Search/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/MessageInput/FileView/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/PinnedMessages/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/GroupChat/GroupChatDetails/UpdateGroupName/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/Conversations/EmptyConversations/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/Chat/ChatDetails/SegmentTabs/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/Chat/ChatDetails/ContactHeader/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/ContactList/IndexSection/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/Gif/GifKeyboard/index.tsx",["913"],"import React, { useEffect, useState, useCallback, useRef } from \"react\";\nimport {\n  IonContent,\n  IonInfiniteScroll,\n  IonInfiniteScrollContent,\n  IonCard,\n  IonCardHeader,\n  IonSearchbar,\n  IonText,\n  IonButton,\n  IonIcon,\n} from \"@ionic/react\";\nimport {\n  chevronUpOutline,\n  chevronDownOutline,\n  arrowBack,\n} from \"ionicons/icons\";\nimport { getGifs } from \"../../../redux/gif/actions/getGifs\";\nimport { getCategories } from \"../../../redux/gif/actions/getCategories\";\nimport styles from \"./style.module.css\";\nimport Spinner from \"../../../components/Spinner\";\nimport { getGifsState } from \"../../../redux/gif/actions/getGifsState\";\nimport { useAppDispatch } from \"../../../utils/services/ReduxService\";\n\nexport interface FileContent {\n  metadata: {\n    fileName: string;\n    fileType: \"VIDEO\" | \"IMAGE\" | \"OTHER\";\n    fileSize: number;\n  };\n  fileType: {\n    type: \"VIDEO\" | \"IMAGE\" | \"OTHER\";\n    payload?: { thumbnail: Uint8Array };\n  };\n  fileBytes: Uint8Array;\n}\n\nexport interface MessageInputOnSendParams {\n  message?: string;\n  files?: FileContent[];\n  reply?: string;\n  setIsLoading: React.Dispatch<React.SetStateAction<boolean>>;\n}\n\ninterface Props {\n  onChange?: (message: string) => any;\n  onSend?: (opt?: MessageInputOnSendParams) => any;\n  onSelect?: (message: string) => any;\n}\n\nconst GifKeyboard: React.FC<Props> = ({ onSend, onChange, onSelect }) => {\n  const dispatch = useAppDispatch();\n  const [searchText, setSearchText] = useState(\"\");\n  const [selectedGif, setSelectedGif] = useState(\"\");\n  const [categories, setCategories] = useState<any[]>([]);\n  const [showCategories, setShowCategories] = useState<boolean>(true);\n  const [gifs, setGifs] = useState<any[]>([]);\n  const [next, setNext] = useState<any>(undefined);\n  const [expanded, setExpanded] = useState<boolean>(false);\n\n  const handleOnChange = (e: CustomEvent) => setSearchText(e.detail.value!);\n\n  const handleOnClick = (url: string) => {\n    setSelectedGif(url);\n    resetSearchText();\n  };\n\n  const handleOnExpandClick = () => {\n    setExpanded(!expanded);\n  };\n\n  const handleOnBackClick = () => {\n    setShowCategories(true);\n    resetSearchText();\n  };\n\n  const handleOnCategoryClick = (searchTerm: string) => {\n    setSearchText(searchTerm);\n\n    dispatch(getGifs(searchText)).then((res: any) => {\n      setGifs(res.gifs);\n      setNext(res.next);\n    });\n    setShowCategories(false);\n  };\n\n  const handleOnScrollBottom = (complete: () => Promise<void>) => {\n    dispatch(getGifs(searchText, next)).then((res: any) => {\n      setGifs(gifs ? [...gifs, ...res.gifs] : res.gifs);\n      setNext(res.next);\n    });\n    complete();\n  };\n\n  const resetSearchText = () => setSearchText(\"\");\n\n  const onChangeCallback = useCallback(() => {\n    if (onSelect) onSelect(selectedGif);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedGif]);\n\n  useEffect(() => {\n    dispatch(getCategories()).then((res: any) => {\n      setCategories(res.top);\n    });\n    dispatch(getGifs(searchText)).then((res: any) => {\n      setGifs(res.gifs);\n      setNext(res.next);\n    });\n    dispatch(getGifsState()).then((res: any[]) => setGifs(res));\n  }, [searchText]);\n\n  useEffect(() => onChangeCallback(), [selectedGif, onChangeCallback]);\n\n  const infiniteGifScroll = useRef<HTMLIonInfiniteScrollElement>(null);\n  const complete: () => any = () => infiniteGifScroll.current?.complete();\n\n  const renderCategories = () => {\n    return Object.values(categories).map((category: any) => {\n      return (\n        <div key={category.name}>\n          <div\n            className={styles.textholder}\n            onClick={() => handleOnCategoryClick(category.searchterm)}\n          >\n            <IonText className={styles.categorytext}>\n              {category.name.replace(\"#\", \"\").toUpperCase()}\n            </IonText>\n          </div>\n          <img\n            alt={category.name}\n            className={styles.categorypreview}\n            src={category.image}\n          />\n        </div>\n      );\n    });\n  };\n\n  const renderGif = () =>\n    Object.values(gifs).map((gif: any) => {\n      return (\n        // <IonCard\n        //   className={styles.gifcard}\n        //   onClick={() => handleOnClick(gif.media[0].gif.url)}\n        // >\n        <div key={gif.media[0].nanogif.url}>\n          <img\n            className={styles.gifpreview}\n            onClick={() => handleOnClick(gif.media[0].gif.url)}\n            alt={gif.title}\n            src={\n              gif.media[0].tinygif.preview\n                ? gif.media[0].nanogif.url\n                : gif.media[0].gif.preview\n            }\n          />\n        </div>\n        // </IonCard>\n      );\n    });\n\n  return (\n    <IonCard className={styles.keyboardcontainer}>\n      <IonCardHeader className={styles.header}>\n        {showCategories ? null : (\n          <IonButton onClick={handleOnBackClick} fill=\"clear\">\n            <IonIcon icon={arrowBack} />\n          </IonButton>\n        )}\n        <IonSearchbar\n          value={searchText}\n          onIonChange={handleOnChange}\n          debounce={2000}\n        ></IonSearchbar>\n\n        <IonButton onClick={handleOnExpandClick} fill=\"clear\">\n          <IonIcon icon={expanded ? chevronDownOutline : chevronUpOutline} />\n        </IonButton>\n      </IonCardHeader>\n\n      <IonContent\n        className={expanded ? styles.gifcontainerexpanded : styles.gifcontainer}\n      >\n        {gifs && Object.values(gifs).length > 0 ? (\n          <div className={styles.images}>\n            {showCategories && searchText === \"\"\n              ? renderCategories()\n              : renderGif()}\n\n            <IonInfiniteScroll\n              ref={infiniteGifScroll}\n              position=\"bottom\"\n              threshold=\"0px\"\n              onIonInfinite={(e) => handleOnScrollBottom(complete)}\n            >\n              <IonInfiniteScrollContent loadingSpinner=\"circles\"></IonInfiniteScrollContent>\n            </IonInfiniteScroll>\n          </div>\n        ) : (\n          <Spinner />\n        )}\n      </IonContent>\n    </IonCard>\n  );\n};\n\nexport default GifKeyboard;\n","/home/holo/Desktop/rsm/kizuna/ui/src/components/Conversation/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/Toolbar/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/Contacts/EmptyContacts/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/GroupChat/GroupChatDetails/EndButtons/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/GroupChat/GroupChatDetails/SegmentTabs/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/GroupChat/GroupChatDetails/Members/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/Slides/FileBox/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/Slides/MediaBox/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/NewConversation/ContactList/ContactItem.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/AgentIdentifier/index.tsx",["914"],"import React from \"react\";\nimport { IonAvatar } from \"@ionic/react\";\nimport Identicon from \"../Identicon\";\nimport styles from \"./style.module.css\";\n\ninterface Props {\n  nickname: string;\n  id: string; // base64 of AgentPubKey\n  charToShow?: number; // no of characters to show in agentpubkey\n  avatar?: string;\n  displayId?: boolean;\n  displayAvatar?: boolean;\n  displayNickname?: boolean;\n  noSpace?: boolean;\n}\n\nconst AgentIdentifier: React.FC<Props> = ({\n  nickname,\n  id,\n  charToShow,\n  avatar = undefined,\n  displayId = true,\n  displayAvatar = false,\n  displayNickname = true,\n  noSpace = false,\n}) => {\n  /* trim the hash type prefix */\n  const trimmedId = id.slice(5);\n\n  const renderId = (id: string, numOfChar: number | undefined) => (\n    <span className={styles[\"label\"]}>\n      {numOfChar ? id.slice(0, numOfChar).concat(\"...\") : id}\n    </span>\n  );\n  const renderAvatar = (id: string) => (\n    <div className={styles[\"avatar\"]}>\n      {/* <Identicon hash={id} avatar={avatar} size={50} /> */}\n      <IonAvatar>\n        <img src=\"assets/icon/person-circle-outline.png\" alt=\"avatar\"></img>\n      </IonAvatar>\n    </div>\n  );\n\n  return (\n    <div className={!noSpace ? styles[\"container\"] : styles[\"\"]}>\n      {displayAvatar ? renderAvatar(id) : null}\n      {displayNickname ? nickname : null}\n      {displayId ? renderId(trimmedId, charToShow) : null}\n    </div>\n  );\n};\n\nexport default AgentIdentifier;\n","/home/holo/Desktop/rsm/kizuna/ui/src/app/Contacts/AddContact/AddContactIndex.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/Contacts/AddContact/AddContactHeader.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/preference/actions/setPreference.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/preference/actions/fetchPreference.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/gif/actions/getCategories.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/gif/actions/getGifsState.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/gif/actions/getGifs.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/Chat/ChatList/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/Chat/Me/index.tsx",["915"],"import {\n  IonAvatar,\n  IonIcon,\n  IonItem,\n  IonText,\n  isPlatform,\n  useIonPopover,\n} from \"@ionic/react\";\nimport {\n  alertCircleOutline,\n  checkmarkCircleOutline,\n  checkmarkDoneCircle,\n  radioButtonOff,\n} from \"ionicons/icons\";\nimport React, { useState } from \"react\";\nimport { useIntl } from \"react-intl\";\nimport {\n  FilePayload,\n  isTextPayload,\n  TextPayload,\n} from \"../../../redux/commons/types\";\nimport { usePressHandlers } from \"../../../utils/services/EventService\";\nimport Identicon from \"../../Identicon\";\nimport Spinner from \"../../Spinner\";\nimport ChatPopover from \"../ChatPopover\";\nimport File from \"../File\";\nimport ReplyTo from \"../ReplyTo\";\nimport { default as common, default as styles } from \"../style.module.css\";\nimport Text from \"../Text\";\nimport { ChatProps } from \"../types\";\n\nconst Me: React.FC<ChatProps> = ({\n  id,\n  profile,\n  payload,\n  timestamp,\n  replyTo,\n  onReply,\n  onDelete,\n  onPinMessage,\n  isPinned,\n  type,\n  showProfilePicture,\n  isSeen = false,\n  onDownload,\n  onRetry,\n  err,\n}) => {\n  const intl = useIntl();\n  const [loading, setLoading] = useState(false);\n  const isText = isTextPayload(payload);\n\n  const onLongPress = (e: any) =>\n    present({\n      event: e.nativeEvent,\n    });\n  const [present, dismiss] = useIonPopover(ChatPopover, {\n    onHide: () => dismiss(),\n    onPin: onPinMessage,\n    onReply: () => {\n      if (onReply) onReply({ author: profile.username, payload, id });\n    },\n    onDelete: () => {\n      if (onDelete) onDelete();\n    },\n    onRetry: () => {\n      if (onRetry) onRetry(setLoading);\n    },\n    onCopy: () => {\n      if (isText) onCopy((payload as TextPayload).payload.payload);\n    },\n    isPinned,\n    isText,\n    intl,\n    err,\n  });\n\n  const onCopy = (message: string) => {\n    navigator.clipboard.writeText(message);\n  };\n\n  // const [isModalOpen, setIsModalOpen] = useState(false);F\n  const pressHandlers = usePressHandlers(onLongPress, () => {});\n\n  const isP2P = type === \"p2p\";\n\n  const fileMaxWidth = isText\n    ? \"\"\n    : isPlatform(\"desktop\")\n    ? common[\"max-file\"]\n    : \"\";\n\n  return (\n    <>\n      <IonItem\n        lines=\"none\"\n        className={`${common[\"me-container\"]} ${fileMaxWidth}`}\n        onClick={(e) => {\n          if (err) onLongPress(e);\n        }}\n        {...pressHandlers}\n      >\n        <div\n          className={`${common[\"me\"]} ${common[isText ? \"text\" : \"file\"]} ${\n            common.bubble\n          }`}\n        >\n          {replyTo ? <ReplyTo me={true} message={replyTo}></ReplyTo> : null}\n          {isText ? (\n            <Text type=\"me\" message={payload as TextPayload} />\n          ) : (\n            <File\n              chatType={isP2P ? \"p2p\" : \"group\"}\n              onDownload={onDownload}\n              type=\"me\"\n              timestamp={timestamp}\n              file={payload as FilePayload}\n              err={err}\n            />\n          )}\n          <IonText>\n            <h6\n              className={`ion-no-margin ion-text-end ${styles[\"message-text\"]}`}\n            >\n              {intl.formatTime(timestamp)}\n              <IonIcon\n                size=\"medium\"\n                icon={\n                  isSeen\n                    ? checkmarkDoneCircle\n                    : err && id !== \"error message\"\n                    ? radioButtonOff\n                    : checkmarkCircleOutline\n                }\n              />\n            </h6>\n          </IonText>\n        </div>\n        {err && id === \"error message\" ? (\n          loading ? (\n            <div className={common.picture}>\n              <Spinner />\n            </div>\n          ) : (\n            <IonIcon\n              color=\"danger\"\n              className={common.picture}\n              style={{ marginLeft: \"0.5rem\" }}\n              icon={alertCircleOutline}\n            />\n          )\n        ) : isP2P ? null : (\n          <div className={common[\"picture\"]} style={{ marginLeft: \"0.5rem\" }}>\n            {showProfilePicture ? (\n              profile.fields.avatar ? (\n                <IonAvatar className={common[\"avatar-container\"]}>\n                  <img src={profile.fields.avatar} alt=\"avatar\" />\n                </IonAvatar>\n              ) : (\n                <IonAvatar className={common[\"avatar-container\"]}>\n                  {/* <Identicon hash={profile.id!} size={35} /> */}\n                  <img\n                    src=\"assets/icon/person-circle-outline.png\"\n                    alt=\"avatar\"\n                  ></img>\n                </IonAvatar>\n              )\n            ) : null}\n          </div>\n        )}\n      </IonItem>\n      {err && id === \"error message\" ? (\n        loading ? null : (\n          <IonItem lines=\"none\" className={styles[\"not-delivered-container\"]}>\n            <IonText className={styles[\"not-delivered\"]} color=\"danger\">\n              Not delivered\n            </IonText>\n          </IonItem>\n        )\n      ) : null}\n    </>\n  );\n};\n\nexport default Me;\n","/home/holo/Desktop/rsm/kizuna/ui/src/components/Chat/Others/index.tsx",["916"],"import {\n  IonAvatar,\n  IonItem,\n  IonText,\n  isPlatform,\n  useIonPopover,\n} from \"@ionic/react\";\nimport React from \"react\";\nimport { useIntl } from \"react-intl\";\nimport {\n  FilePayload,\n  isTextPayload,\n  TextPayload,\n} from \"../../../redux/commons/types\";\nimport { usePressHandlers } from \"../../../utils/services/EventService\";\nimport Identicon from \"../../Identicon\";\nimport ChatPopover from \"../ChatPopover\";\nimport File from \"../File\";\nimport MessageTimestamp from \"../MessageTimestamp\";\nimport ReplyTo from \"../ReplyTo\";\nimport { default as common } from \"../style.module.css\";\nimport Text from \"../Text\";\nimport { ChatProps } from \"../types\";\n\nconst Others: React.FC<ChatProps> = ({\n  id,\n  profile,\n  type,\n  timestamp,\n  payload,\n  readList,\n  onSeen,\n  showProfilePicture,\n  showName,\n  onReply,\n  isPinned,\n  onPinMessage,\n  replyTo,\n  isSeen = false,\n  onDownload,\n}) => {\n  const intl = useIntl();\n  const isText = isTextPayload(payload);\n\n  const [show, dismiss] = useIonPopover(ChatPopover, {\n    onHide: () => dismiss(),\n    onPin: onPinMessage,\n    onReply: () => {\n      if (onReply) onReply({ author: profile.username, payload, id });\n    },\n    onCopy: () => {\n      if (isText) onCopy((payload as TextPayload).payload.payload);\n    },\n    isText,\n    isPinned,\n    intl,\n  });\n\n  // const [isModalOpen, setIsModalOpen] = useState(false);\n  const onLongPress = (e: any) => {\n    show({ event: e.nativeEvent });\n  };\n\n  const onCopy = (message: string) => {\n    navigator.clipboard.writeText(message);\n  };\n\n  const pressHandlers = usePressHandlers(onLongPress, () => {});\n\n  const isP2P = type === \"p2p\";\n  const fileMaxWidth = isText\n    ? \"\"\n    : isPlatform(\"desktop\")\n    ? common[\"max-file\"]\n    : \"\";\n\n  return (\n    <>\n      {isP2P ? null : showName ? (\n        <IonItem lines=\"none\" className={`${common[\"author-name\"]}`}>\n          <IonText color=\"medium\">{profile.username}</IonText>\n        </IonItem>\n      ) : null}\n\n      <IonItem\n        lines=\"none\"\n        className={`${common[\"others-container\"]} ${fileMaxWidth}`}\n        {...pressHandlers}\n      >\n        {isP2P ? null : (\n          <div className={common[\"picture\"]} style={{ marginRight: \"0.5rem\" }}>\n            {showProfilePicture ? (\n              profile.fields.avatar ? (\n                <IonAvatar className={common[\"avatar-container\"]}>\n                  <img src={profile.fields.avatar} alt=\"avatar\"></img>\n                </IonAvatar>\n              ) : (\n                // <Identicon hash={profile.id!} size={35} />\n                <IonAvatar className={common[\"avatar-container\"]}>\n                  <img\n                    src=\"assets/icon/person-circle-outline.png\"\n                    alt=\"avatar\"\n                  ></img>\n                </IonAvatar>\n              )\n            ) : null}\n          </div>\n        )}\n\n        <div\n          className={`${common[\"others\"]} ${common[isText ? \"text\" : \"file\"]} ${\n            common.bubble\n          }`}\n        >\n          {replyTo ? <ReplyTo me={false} message={replyTo}></ReplyTo> : null}\n          {isText ? (\n            <Text type=\"others\" message={payload as TextPayload} />\n          ) : (\n            <File\n              chatType={isP2P ? \"p2p\" : \"group\"}\n              onDownload={onDownload}\n              type=\"others\"\n              file={payload as FilePayload}\n              timestamp={timestamp}\n            />\n          )}\n          <MessageTimestamp onSeen={onSeen} timestamp={timestamp} />\n        </div>\n      </IonItem>\n      {/* <ChatModal\n        onPin={onPinMessage as () => any}\n        isPinned={isPinned}\n        onReply={() => {\n          if (onReply) onReply({ author, payload, id });\n        }}\n        open={[isModalOpen, setIsModalOpen]}\n      ></ChatModal> */}\n    </>\n  );\n};\n\nexport default Others;\n","/home/holo/Desktop/rsm/kizuna/ui/src/components/Chat/File/ImageView/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/Contacts/AddContact/AddContactItem.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/contacts/actions/index.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/gif/actions/setGifs.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/gif/actions/setCategories.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/DatePicker/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/VideoPlayer/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/utils/services/EventService.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/ContactList/ContactItem/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/GroupChat/GroupChatDetails/Members/AddMemberModal/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/Chat/File/FileView/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/contacts/actions/blockContact.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/contacts/actions/addContact.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/contacts/actions/removeContact.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/contacts/actions/fetchBlocked.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/contacts/actions/setContacts.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/contacts/actions/fetchMyContacts.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/redux/contacts/actions/unblockContact.ts",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/Chat/File/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/Chat/ReplyTo/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/Chat/Text/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/Chat/ChatPopover/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/Chat/MessageTimestamp/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/Chat/File/ImageView/ImageModal/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/VideoPlayer/Controls/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/VideoPlayer/VideoPlayerModal/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/GroupChat/GroupChatDetails/Members/AddMemberModal/AddMemberHeader/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/GroupChat/GroupChatDetails/Members/AddMemberModal/AddMemberIndex/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/components/Chat/File/VideoView/index.tsx",[],"/home/holo/Desktop/rsm/kizuna/ui/src/app/GroupChat/GroupChatDetails/Members/AddMemberModal/AddMemberItem/index.tsx",[],{"ruleId":"917","replacedBy":"918"},{"ruleId":"919","replacedBy":"920"},{"ruleId":"921","severity":1,"message":"922","line":1,"column":10,"nodeType":"923","messageId":"924","endLine":1,"endColumn":19},{"ruleId":"921","severity":1,"message":"925","line":2,"column":17,"nodeType":"923","messageId":"924","endLine":2,"endColumn":32},{"ruleId":"921","severity":1,"message":"926","line":7,"column":3,"nodeType":"923","messageId":"924","endLine":7,"endColumn":9},{"ruleId":"921","severity":1,"message":"927","line":8,"column":3,"nodeType":"923","messageId":"924","endLine":8,"endColumn":15},{"ruleId":"928","severity":1,"message":"929","line":217,"column":15,"nodeType":"930","messageId":"931","endLine":221,"endColumn":17},{"ruleId":"928","severity":1,"message":"929","line":227,"column":15,"nodeType":"930","messageId":"931","endLine":232,"endColumn":17},{"ruleId":"928","severity":1,"message":"929","line":289,"column":11,"nodeType":"930","messageId":"931","endLine":293,"endColumn":13},{"ruleId":"928","severity":1,"message":"929","line":300,"column":11,"nodeType":"930","messageId":"931","endLine":304,"endColumn":13},{"ruleId":"921","severity":1,"message":"932","line":1,"column":10,"nodeType":"923","messageId":"924","endLine":1,"endColumn":23},{"ruleId":"921","severity":1,"message":"933","line":13,"column":3,"nodeType":"923","messageId":"924","endLine":13,"endColumn":9},{"ruleId":"921","severity":1,"message":"934","line":29,"column":8,"nodeType":"923","messageId":"924","endLine":29,"endColumn":17},{"ruleId":"935","severity":1,"message":"936","line":155,"column":6,"nodeType":"937","endLine":155,"endColumn":16,"suggestions":"938"},{"ruleId":"935","severity":1,"message":"939","line":168,"column":6,"nodeType":"937","endLine":168,"endColumn":15,"suggestions":"940"},{"ruleId":"921","severity":1,"message":"941","line":14,"column":10,"nodeType":"923","messageId":"924","endLine":14,"endColumn":25},{"ruleId":"921","severity":1,"message":"942","line":126,"column":13,"nodeType":"923","messageId":"924","endLine":126,"endColumn":35},{"ruleId":"921","severity":1,"message":"943","line":3,"column":21,"nodeType":"923","messageId":"924","endLine":3,"endColumn":28},{"ruleId":"921","severity":1,"message":"944","line":4,"column":10,"nodeType":"923","messageId":"924","endLine":4,"endColumn":22},{"ruleId":"921","severity":1,"message":"945","line":4,"column":24,"nodeType":"923","messageId":"924","endLine":4,"endColumn":43},{"ruleId":"921","severity":1,"message":"946","line":5,"column":36,"nodeType":"923","messageId":"924","endLine":5,"endColumn":44},{"ruleId":"921","severity":1,"message":"934","line":4,"column":8,"nodeType":"923","messageId":"924","endLine":4,"endColumn":17},{"ruleId":"921","severity":1,"message":"947","line":10,"column":3,"nodeType":"923","messageId":"924","endLine":10,"endColumn":13},{"ruleId":"921","severity":1,"message":"948","line":98,"column":10,"nodeType":"923","messageId":"924","endLine":98,"endColumn":23},{"ruleId":"935","severity":1,"message":"949","line":130,"column":6,"nodeType":"937","endLine":130,"endColumn":19,"suggestions":"950"},{"ruleId":"921","severity":1,"message":"951","line":146,"column":9,"nodeType":"923","messageId":"924","endLine":146,"endColumn":27},{"ruleId":"921","severity":1,"message":"952","line":1,"column":10,"nodeType":"923","messageId":"924","endLine":1,"endColumn":25},{"ruleId":"921","severity":1,"message":"952","line":1,"column":10,"nodeType":"923","messageId":"924","endLine":1,"endColumn":25},{"ruleId":"921","severity":1,"message":"947","line":3,"column":10,"nodeType":"923","messageId":"924","endLine":3,"endColumn":20},{"ruleId":"921","severity":1,"message":"953","line":4,"column":8,"nodeType":"923","messageId":"924","endLine":4,"endColumn":14},{"ruleId":"935","severity":1,"message":"954","line":111,"column":6,"nodeType":"937","endLine":111,"endColumn":18,"suggestions":"955"},{"ruleId":"921","severity":1,"message":"934","line":3,"column":8,"nodeType":"923","messageId":"924","endLine":3,"endColumn":17},{"ruleId":"921","severity":1,"message":"934","line":23,"column":8,"nodeType":"923","messageId":"924","endLine":23,"endColumn":17},{"ruleId":"921","severity":1,"message":"934","line":16,"column":8,"nodeType":"923","messageId":"924","endLine":16,"endColumn":17},"no-native-reassign",["956"],"no-negated-in-lhs",["957"],"@typescript-eslint/no-unused-vars","'AnyAction' is defined but never used.","Identifier","unusedVar","'ThunkMiddleware' is defined but never used.","'RoleId' is defined but never used.","'AppWebsocket' is defined but never used.","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","'serializeHash' is defined but never used.","'IonImg' is defined but never used.","'Identicon' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch', 'groupData.creator', 'groupData.members', 'groupData.originalGroupId', and 'myProfile.id'. Either include them or remove the dependency array.","ArrayExpression",["958"],"React Hook useEffect has missing dependencies: 'isTyping' and 'typingIndicator'. Either include them or remove the dependency array.",["959"],"'fetchMyContacts' is defined but never used.","'newCrop' is assigned a value but never used.","'IonIcon' is defined but never used.","'personCircle' is defined but never used.","'personCircleOutline' is defined but never used.","'useState' is defined but never used.","'IonContent' is defined but never used.","'selectedEmoji' is assigned a value but never used.","React Hook useCallback has missing dependencies: 'onSend' and 'showGifs'. Either include them or remove the dependency array. If 'onSend' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["960"],"'handleOnEmojiClick' is assigned a value but never used.","'deserializeHash' is defined but never used.","'styles' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["961"],"no-global-assign","no-unsafe-negation",{"desc":"962","fix":"963"},{"desc":"964","fix":"965"},{"desc":"966","fix":"967"},{"desc":"968","fix":"969"},"Update the dependencies array to be: [dispatch, groupData.creator, groupData.members, groupData.originalGroupId, isTyping, myProfile.id]",{"range":"970","text":"971"},"Update the dependencies array to be: [isTyping, message, typingIndicator]",{"range":"972","text":"973"},"Update the dependencies array to be: [onSend, selectedGif, showGifs]",{"range":"974","text":"975"},"Update the dependencies array to be: [dispatch, searchText]",{"range":"976","text":"977"},[4771,4781],"[dispatch, groupData.creator, groupData.members, groupData.originalGroupId, isTyping, myProfile.id]",[5134,5143],"[isTyping, message, typingIndicator]",[3554,3567],"[onSend, selectedGif, showGifs]",[3139,3151],"[dispatch, searchText]"]